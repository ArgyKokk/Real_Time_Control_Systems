/**
 * Header file for the FMI_ControllerPan model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * FMI C++ glue code to connect to ControllerPan
 * Modifying this file is absolutely not recommended!
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#pragma once

#include "csp/CSP.h"
#include "fmi2Functions.h" 
#include "logger.h" 
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

using namespace LUNA::CSP;

namespace ControllerPan { namespace FMI_ControllerPan { 

class FMI_ControllerPan : public CodeBlock
{

public:
  // Define constructor and destructor
  FMI_ControllerPan(double &SetPointPan, double &measIO, double &steerIO);
  virtual ~FMI_ControllerPan();

  void execute();

private:

  // Class variables
  double &SetPointPan;
  double &measIO;
  double &steerIO;


// Make a new FMU component
fmi2Component s1 = NULL;

//FMIlogger declaration
FMILogger_ControllerPan *logger = new FMILogger_ControllerPan();

// functions for the FMU
fmi2CallbackFunctions cbf = {FMILogger_ControllerPan::fmiLog,calloc,free,NULL,NULL};

// variables for the simulation.
double timeStep = 0;
double currentTime = 0;
fmi2Status status = fmi2OK;
bool simulationFinished = false;

// typedef for loading shared lib functions
typedef fmi2Component (*fp_instantiate)(fmi2String, fmi2Type, fmi2String, fmi2String, const fmi2CallbackFunctions*, fmi2Boolean, fmi2Boolean);
typedef fmi2Status (*fp_setup)(fmi2Component, fmi2Boolean, fmi2Real, fmi2Real, fmi2Boolean, fmi2Real);
typedef fmi2Status (*fp_exit)(fmi2Component);
typedef fmi2Status (*fp_doStep)(fmi2Component, fmi2Real, fmi2Real, fmi2Boolean);

// pointers for loading shared lib functions
void *handle;
fp_instantiate f_instantiate;
fp_setup f_setup;
fp_exit f_exit;
fp_doStep f_doStep;
};

// Close namespace(s)
} } 
