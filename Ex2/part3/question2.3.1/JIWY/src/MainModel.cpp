/**
 * Source file for the MainModel model
 * Generated by the TERRA Arch2LUNA generator version 1.0.1
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "MainModel.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end
double g_time , g_stepsize;
namespace MainModel { 

MainModel::MainModel() :
    Recursion<CSProcess>()
{
  SETNAME(this, "MainModel");

  // Initialize channels
  myControllerPansteerIO_to_plantPanInChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myControllerTiltsteerIO_to_plantTiltInChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myjoystickJoyStickPan_to_ControllerPanSetPointPanChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myjoystickJoyStickTilt_to_ControllerTiltSetPointTiltChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myplantPanOut_to_ControllerPanmeasIOChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myplantTiltOut_to_ControllerTiltmeasIOChannel = new UnbufferedChannel<double, One2In, Out2One>();

  // Initialize model objects
  myControllerPan = new ControllerPan::ControllerPan(myjoystickJoyStickPan_to_ControllerPanSetPointPanChannel, myplantPanOut_to_ControllerPanmeasIOChannel, myControllerPansteerIO_to_plantPanInChannel);
  SETNAME(myControllerPan, "ControllerPan");
  myControllerTilt = new ControllerTilt::ControllerTilt(myjoystickJoyStickTilt_to_ControllerTiltSetPointTiltChannel, myplantTiltOut_to_ControllerTiltmeasIOChannel, myControllerTiltsteerIO_to_plantTiltInChannel);
  SETNAME(myControllerTilt, "ControllerTilt");
  myjoystick = new JoyStick::JoyStick(myjoystickJoyStickPan_to_ControllerPanSetPointPanChannel, myjoystickJoyStickTilt_to_ControllerTiltSetPointTiltChannel);
  SETNAME(myjoystick, "joystick");
  myplant = new plant::plant(myControllerPansteerIO_to_plantPanInChannel, myplantPanOut_to_ControllerPanmeasIOChannel, myControllerTiltsteerIO_to_plantTiltInChannel, myplantTiltOut_to_ControllerTiltmeasIOChannel);
  SETNAME(myplant, "plant");

  // Create Parallel group containing all architecture components
  parallelGroup = new Parallel(
    (CSPConstruct *) myControllerPan,
    (CSPConstruct *) myControllerTilt,
    (CSPConstruct *) myjoystick,
    (CSPConstruct *) myplant,
    NULL
  );
  SETNAME(parallelGroup, "parallelGroup");

  // Register group as top-level recursive object
  setToActivate(parallelGroup);
  setEvaluateCondition(true);
}

MainModel::~MainModel()
{
  // TODO Properly destroy all additional objects that got defined in the constructor

  // Destroy model objects
  delete myplant;
  delete myjoystick;
  delete myControllerTilt;
  delete myControllerPan;

  // Destroy channels
  delete myControllerPansteerIO_to_plantPanInChannel;
  delete myControllerTiltsteerIO_to_plantTiltInChannel;
  delete myjoystickJoyStickPan_to_ControllerPanSetPointPanChannel;
  delete myjoystickJoyStickTilt_to_ControllerTiltSetPointTiltChannel;
  delete myplantPanOut_to_ControllerPanmeasIOChannel;
  delete myplantTiltOut_to_ControllerTiltmeasIOChannel;
}

// Close namespace(s)
} 
