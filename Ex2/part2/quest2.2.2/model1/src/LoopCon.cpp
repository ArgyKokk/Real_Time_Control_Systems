/**
 * Source file for the LoopCon model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "LoopCon.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace MainModel { namespace LoopCon { 

LoopCon::LoopCon(ChannelIn<int> *COUT, ChannelOut<int> *MV, ChannelOut<int> *SP) :
    Sequential(NULL)
{
  SETNAME(this, "LoopCon");

  // Initialize model objects
  myCPP_first = new CPP_first::CPP_first(V_MV, V_OUT);
  SETNAME(myCPP_first, "CPP_first");
  myOUT_WRITER = new Writer<int>(&V_OUT, COUT);
  SETNAME(myOUT_WRITER, "OUT_WRITER");
  myREADER_MV = new Reader<int>(&V_MV, MV);
  SETNAME(myREADER_MV, "READER_MV");
  mySP_READER = new Reader<int>(&V_SP, SP);
  SETNAME(mySP_READER, "SP_READER");

  // Create PARALLEL group
  myPARALLEL = new Parallel(
    (CSPConstruct *) mySP_READER,
    (CSPConstruct *) myCPP_first,
    (CSPConstruct *) myREADER_MV,
    NULL
  );
  SETNAME(myPARALLEL, "PARALLEL");


  // Register model objects
  this->append_child(myPARALLEL);
  this->append_child(myOUT_WRITER);

  // protected region constructor on begin
  // protected region constructor end
}

LoopCon::~LoopCon()
{
  // TODO Properly destroy all additional objects that got defined in the constructor

  // protected region destructor on begin
  // protected region destructor end

  // Destroy model groups
  delete myPARALLEL;

  // Destroy model objects
  delete mySP_READER;
  delete myREADER_MV;
  delete myOUT_WRITER;
  delete myCPP_first;
}



// protected region additional functions on begin
// protected region additional functions end

// Close namespace(s)
} } 
