/**
 * Source file for the Producer12 model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "Producer12.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace MainModel { namespace Producer12 { 

Producer12::Producer12(ChannelIn<int> *producer_ch1_out, ChannelIn<int> *producer_ch2_out) :
    Sequential(NULL)
{
  SETNAME(this, "Producer12");

  // Initialize model objects
  myCPP_pro12 = new CPP_pro12::CPP_pro12(var1, var2);
  SETNAME(myCPP_pro12, "CPP_pro12");
  myproducer_writer_ch1 = new Writer<int>(&var1, producer_ch1_out);
  SETNAME(myproducer_writer_ch1, "producer_writer_ch1");
  myproducer_writer_ch2 = new Writer<int>(&var2, producer_ch2_out);
  SETNAME(myproducer_writer_ch2, "producer_writer_ch2");

  // Create SEQUENTIAL group
  mySEQUENTIAL = new Sequential(
    (CSPConstruct *) myproducer_writer_ch1,
    (CSPConstruct *) myproducer_writer_ch2,
    NULL
  );
  SETNAME(mySEQUENTIAL, "SEQUENTIAL");


  // Register model objects
  this->append_child(myCPP_pro12);
  this->append_child(mySEQUENTIAL);

  // protected region constructor on begin
  // protected region constructor end
}

Producer12::~Producer12()
{
  // TODO Properly destroy all additional objects that got defined in the constructor

  // protected region destructor on begin
  // protected region destructor end

  // Destroy model groups
  delete mySEQUENTIAL;

  // Destroy model objects
  delete myproducer_writer_ch2;
  delete myproducer_writer_ch1;
  delete myCPP_pro12;
}



// protected region additional functions on begin
// protected region additional functions end

// Close namespace(s)
} } 
