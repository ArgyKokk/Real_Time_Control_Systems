/**
 * Source file for the MainModel model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "MainModel.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace MainModel { 

MainModel::MainModel() :
    Parallel(NULL)
{
  SETNAME(this, "MainModel");

  // Initialize channels
  myProducerpr_ch1_to_Consumercons1Channel = new UnbufferedChannel<int, One2In, Out2One>();
  myProducerpr_ch2_to_Consumercons2Channel = new UnbufferedChannel<int, One2In, Out2One>();
  myProducerpr_ch3_to_Consumercons3Channel = new UnbufferedChannel<int, One2In, Out2One>();

  // Initialize model objects
  myConsumer = new Consumer::Consumer(myProducerpr_ch1_to_Consumercons1Channel, myProducerpr_ch2_to_Consumercons2Channel, myProducerpr_ch3_to_Consumercons3Channel);
  SETNAME(myConsumer, "Consumer");
  // Make Consumer recursive
  Recursion<CSProcess>* myConsumerRecursion = new Recursion<CSProcess>(myConsumer);
  SETNAME(myConsumerRecursion, "Consumer-recursion");
  myConsumerRecursion->setEvaluateCondition(true);  myProducer = new Producer::Producer(myProducerpr_ch1_to_Consumercons1Channel, myProducerpr_ch2_to_Consumercons2Channel, myProducerpr_ch3_to_Consumercons3Channel);
  SETNAME(myProducer, "Producer");
  // Make Producer recursive
  Recursion<CSPConstruct>* myProducerRecursion = new Recursion<CSPConstruct>(myProducer);
  SETNAME(myProducerRecursion, "Producer-recursion");
  myProducerRecursion->setEvaluateCondition(true);

  // Register model objects
  this->append_child(myProducerRecursion);
  this->append_child(myConsumerRecursion);

  // protected region constructor on begin

  // protected region constructor end
}

MainModel::~MainModel()
{
  // TODO Properly destroy all additional objects that got defined in the constructor

  // protected region destructor on begin

  // protected region destructor end

  // Destroy model objects
  delete myProducer;
  delete myConsumer;

  // Destroy channels
  delete myProducerpr_ch1_to_Consumercons1Channel;
  delete myProducerpr_ch2_to_Consumercons2Channel;
  delete myProducerpr_ch3_to_Consumercons3Channel;
}



// protected region additional functions on begin

// protected region additional functions end

// Close namespace(s)
} 
