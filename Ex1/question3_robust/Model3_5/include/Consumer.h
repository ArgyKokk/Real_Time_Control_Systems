/**
 * Header file for the Consumer model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#pragma once

#include "csp/CSP.h"

// Models
#include "Consumer/CPP_r1.h"
#include "Consumer/CPP_r2.h"
#include "Consumer/CPP_r3.h"

// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

using namespace LUNA::CSP;

namespace MainModel { namespace Consumer { 

class Consumer : public Alternative
{

public:
  // Define constructor and destructor
  Consumer(GuardedChannelOut<int> *cons1, GuardedChannelOut<int> *cons2, GuardedChannelOut<int> *cons3);
  virtual ~Consumer();

private:

  // Class variables
  int var1;
  int var2;
  int var3;

  // Model objects
  CPP_r1::CPP_r1 *myCPP_r1;
  CPP_r2::CPP_r2 *myCPP_r2;
  CPP_r3::CPP_r3 *myCPP_r3;
  GuardedReader<int> *myreader1;
  GuardedReader<int> *myreader2;
  GuardedReader<int> *myvar3;

  // Model groups
  Sequential *mySEQUENTIAL1;
  Sequential *mySEQUENTIAL2;
  Sequential *mySEQUENTIAL3;



  // protected region additional class members or functions on begin

  // protected region additional class members or functions end
};

// Close namespace(s)
} } 
