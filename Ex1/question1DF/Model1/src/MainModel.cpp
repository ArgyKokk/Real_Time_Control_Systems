/**
 * Source file for the MainModel model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "MainModel.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace MainModel { 

MainModel::MainModel() :
    Parallel(NULL)
{
  SETNAME(this, "MainModel");

  // Initialize channels
  myProducer12producer_ch1_out_to_Consumer12consumer_ch1_inChannel = new UnbufferedChannel<int, One2In, Out2One>();
  myProducer12producer_ch2_out_to_Consumer12consumer_ch2_inChannel = new UnbufferedChannel<int, One2In, Out2One>();

  // Initialize model objects
  myConsumer12 = new Consumer12::Consumer12(myProducer12producer_ch1_out_to_Consumer12consumer_ch1_inChannel, myProducer12producer_ch2_out_to_Consumer12consumer_ch2_inChannel);
  SETNAME(myConsumer12, "Consumer12");
  // Make Consumer12 recursive
  Recursion<CSPConstruct>* myConsumer12Recursion = new Recursion<CSPConstruct>(myConsumer12);
  SETNAME(myConsumer12Recursion, "Consumer12-recursion");
  myConsumer12Recursion->setEvaluateCondition(true);  myProducer12 = new Producer12::Producer12(myProducer12producer_ch1_out_to_Consumer12consumer_ch1_inChannel, myProducer12producer_ch2_out_to_Consumer12consumer_ch2_inChannel);
  SETNAME(myProducer12, "Producer12");
  // Make Producer12 recursive
  Recursion<CSPConstruct>* myProducer12Recursion = new Recursion<CSPConstruct>(myProducer12);
  SETNAME(myProducer12Recursion, "Producer12-recursion");
  myProducer12Recursion->setEvaluateCondition(true);

  // Register model objects
  this->append_child(myProducer12Recursion);
  this->append_child(myConsumer12Recursion);

  // protected region constructor on begin
  // protected region constructor end
}

MainModel::~MainModel()
{
  // TODO Properly destroy all additional objects that got defined in the constructor

  // protected region destructor on begin
  // protected region destructor end

  // Destroy model objects
  delete myProducer12;
  delete myConsumer12;

  // Destroy channels
  delete myProducer12producer_ch1_out_to_Consumer12consumer_ch1_inChannel;
  delete myProducer12producer_ch2_out_to_Consumer12consumer_ch2_inChannel;
}



// protected region additional functions on begin
// protected region additional functions end

// Close namespace(s)
} 
