/**
 * Source file for the cpp_producer model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "Producer/cpp_producer.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end
#include <sys/time.h>

namespace ModelTimer { namespace Producer { namespace cpp_producer { 

cpp_producer::cpp_producer(int &signal, int &var1, int &var2) :
    CodeBlock(), signal(signal), var1(var1), var2(var2){
  SETNAME(this, "cpp_producer");
  // protected region constructor on begin
  signal=1;
  // protected region constructor end
}

cpp_producer::~cpp_producer()
{
  // protected region destructor on begin
  // protected region destructor end
}

void cpp_producer::execute()
{
  // protected region execute code on begin
	 if(signal)
		signal=0;
	 else
		signal=1;

	 static struct timespec time1;
	 struct timespec time2;
	 double accum;
	 //gettimeofday(&currentTime,NULL);

	if ( clock_gettime(CLOCK_REALTIME,&time2)== -1)
	 perror("Error");
	else
	{
	 accum = (double) (time2.tv_nsec-time1.tv_nsec)/1000000000L;
	 if (accum > 0)
	   printf("interval : %f \n",accum);
	 time1=time2;
	}
  // protected region execute code end
}

// protected region additional functions on begin
// protected region additional functions end

// Close namespace(s)
} } } 
