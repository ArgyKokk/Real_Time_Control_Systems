
;; Function virtual int LUNA::CSP::CSPConstruct::compareTo(LUNA::CSP::CSPConstruct*) (_ZN4LUNA3CSP12CSPConstruct9compareToEPS1_, funcdef_no=1424, decl_uid=35390, symbol_order=418)

virtual int LUNA::CSP::CSPConstruct::compareTo(LUNA::CSP::CSPConstruct*) (struct CSPConstruct * const this, struct CSPConstruct * obj)
{
  int _3;
  int (*__vtbl_ptr_type) () * _5;
  int (*__vtbl_ptr_type) () _6;
  int _8;
  int _9;

  <bb 2>:
  _3 = this_2(D)->m_priority;
  _5 = obj_4(D)->D.35429._vptr.TreeNode;
  _6 = MEM[(int (*__vtbl_ptr_type) () *)_5 + 20B];
  _8 = OBJ_TYPE_REF(_6;(struct CSPConstruct)obj_4(D)->5) (obj_4(D));
  _9 = _3 - _8;
  return _9;

}



;; Function virtual LUNA::Threading::priority_t LUNA::CSP::CSPConstruct::getPriority() (_ZN4LUNA3CSP12CSPConstruct11getPriorityEv, funcdef_no=1425, decl_uid=35395, symbol_order=419)

virtual LUNA::Threading::priority_t LUNA::CSP::CSPConstruct::getPriority() (struct CSPConstruct * const this)
{
  priority_t _3;

  <bb 2>:
  _3 = this_2(D)->m_priority;
  return _3;

}



;; Function virtual int LUNA::CSP::CSPConstruct::logDoneAndValue() (_ZN4LUNA3CSP12CSPConstruct15logDoneAndValueEv, funcdef_no=1427, decl_uid=35401, symbol_order=421)

virtual int LUNA::CSP::CSPConstruct::logDoneAndValue() (struct CSPConstruct * const this)
{
  <bb 2>:
  return 0;

}



;; Function virtual int LUNA::CSP::CSProcess::setPriority(LUNA::Threading::priority_t) (_ZN4LUNA3CSP9CSProcess11setPriorityEi, funcdef_no=1976, decl_uid=42448, symbol_order=471)

virtual int LUNA::CSP::CSProcess::setPriority(LUNA::Threading::priority_t) (struct CSProcess * const this, priority_t priority)
{
  int ret;
  struct IThread * _4;
  int (*__vtbl_ptr_type) () * _5;
  int (*__vtbl_ptr_type) () _6;

  <bb 2>:
  _4 = this_3(D)->D.42484.m_thread;
  _5 = _4->D.35164._vptr.Uncopyable;
  _6 = MEM[(int (*__vtbl_ptr_type) () *)_5 + 12B];
  ret_9 = OBJ_TYPE_REF(_6;(struct IThread)_4->3) (_4, priority_7(D));
  if (ret_9 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->D.42485.m_priority = priority_7(D);

  <bb 4>:
  return ret_9;

}



;; Function virtual LUNA::Threading::priority_t LUNA::CSP::CSProcess::getPriority() (_ZN4LUNA3CSP9CSProcess11getPriorityEv, funcdef_no=1977, decl_uid=42450, symbol_order=474)

virtual LUNA::Threading::priority_t LUNA::CSP::CSProcess::getPriority() (struct CSProcess * const this)
{
  priority_t _3;

  <bb 2>:
  _3 = this_2(D)->D.42485.m_priority;
  return _3;

}



;; Function virtual int LUNA::CSP::CSProcess::logRunningAndValue() (_ZN4LUNA3CSP9CSProcess18logRunningAndValueEv, funcdef_no=1986, decl_uid=42464, symbol_order=493)

virtual int LUNA::CSP::CSProcess::logRunningAndValue() (struct CSProcess * const this)
{
  <bb 2>:
  return 0;

}



;; Function LUNA::CSP::Sequential::~Sequential() (_ZN4LUNA3CSP10SequentialD2Ev, funcdef_no=3925, decl_uid=74217, symbol_order=1045)

LUNA::CSP::Sequential::~Sequential() (struct Sequential * const this)
{
  <bb 2>:
  *this_2(D) ={v} {CLOBBER};
  return this_2(D);

}



;; Function LUNA::Utility::TreeNode<T>::~TreeNode() [with T = LUNA::CSP::CSPConstruct*] (_ZN4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEED2Ev, funcdef_no=4151, decl_uid=35357, symbol_order=1232)

LUNA::Utility::TreeNode<T>::~TreeNode() [with T = LUNA::CSP::CSPConstruct*] (struct TreeNode * const this)
{
  <bb 2>:
  *this_2(D) ={v} {CLOBBER};
  return this_2(D);

}



;; Function LUNA::Utility::ListItem<ListObjectType>::~ListItem() [with ListObjectType = LUNA::CSP::IWriter] (_ZN4LUNA7Utility8ListItemINS_3CSP7IWriterEED2Ev, funcdef_no=4186, decl_uid=46770, symbol_order=1267)

LUNA::Utility::ListItem<ListObjectType>::~ListItem() [with ListObjectType = LUNA::CSP::IWriter] (struct ListItem * const this)
{
  <bb 2>:
  *this_2(D) ={v} {CLOBBER};
  return this_2(D);

}



;; Function int LUNA::CSP::Writer<DataType>::logRunningAndValue() [with DataType = int] (_ZN4LUNA3CSP6WriterIiE18logRunningAndValueEv, funcdef_no=4514, decl_uid=80201, symbol_order=2381)

int LUNA::CSP::Writer<DataType>::logRunningAndValue() [with DataType = int] (struct Writer * const this)
{
  int * _3;
  int _4;
  float _6;

  <bb 2>:
  _3 = this_2(D)->m_variable;
  _4 = *_3;
  _6 = (float) _4;
  this_2(D)->m_variable_float = _6;
  return 1;

}



;; Function void* LUNA::CSP::Writer<DataType>::getBuffer() [with DataType = int] (_ZN4LUNA3CSP6WriterIiE9getBufferEv, funcdef_no=4515, decl_uid=80199, symbol_order=2382)

void* LUNA::CSP::Writer<DataType>::getBuffer() [with DataType = int] (struct Writer * const this)
{
  void * _3;

  <bb 2>:
  _3 = this_2(D)->m_variable;
  return _3;

}



;; Function size_t LUNA::CSP::Writer<DataType>::getBufferSize() [with DataType = int; size_t = unsigned int] (_ZN4LUNA3CSP6WriterIiE13getBufferSizeEv, funcdef_no=4516, decl_uid=80205, symbol_order=2383)

size_t LUNA::CSP::Writer<DataType>::getBufferSize() [with DataType = int; size_t = unsigned int] (struct Writer * const this)
{
  <bb 2>:
  return 4;

}



;; Function int LUNA::CSP::Writer<DataType>::blockContext(LUNA::locksync::ILockable*) [with DataType = int] (_ZN4LUNA3CSP6WriterIiE12blockContextEPNS_8locksync9ILockableE, funcdef_no=4517, decl_uid=80210, symbol_order=2384)

int LUNA::CSP::Writer<DataType>::blockContext(LUNA::locksync::ILockable*) [with DataType = int] (struct Writer * const this, struct ILockable * lock)
{
  struct IThreadBlocker * _3;
  int (*__vtbl_ptr_type) () * _4;
  int (*__vtbl_ptr_type) () _5;
  struct IThread * _6;
  int _9;

  <bb 2>:
  _3 = this_2(D)->m_blocker;
  _4 = _3->D.41986._vptr.Uncopyable;
  _5 = MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B];
  _6 = this_2(D)->D.80253.D.46813.D.42484.m_thread;
  _9 = OBJ_TYPE_REF(_5;(struct IThreadBlocker)_3->2) (_3, _6, lock_7(D));
  return _9;

}



;; Function int LUNA::CSP::Writer<DataType>::unblockContext(LUNA::locksync::ILockable*) [with DataType = int] (_ZN4LUNA3CSP6WriterIiE14unblockContextEPNS_8locksync9ILockableE, funcdef_no=4518, decl_uid=80213, symbol_order=2385)

int LUNA::CSP::Writer<DataType>::unblockContext(LUNA::locksync::ILockable*) [with DataType = int] (struct Writer * const this, struct ILockable * lock)
{
  struct IThreadBlocker * _3;
  int (*__vtbl_ptr_type) () * _4;
  int (*__vtbl_ptr_type) () _5;
  int _8;

  <bb 2>:
  _3 = this_2(D)->m_blocker;
  _4 = _3->D.41986._vptr.Uncopyable;
  _5 = MEM[(int (*__vtbl_ptr_type) () *)_4 + 12B];
  _8 = OBJ_TYPE_REF(_5;(struct IThreadBlocker)_3->3) (_3, lock_6(D));
  return _8;

}



;; Function void LUNA::CSP::Writer<DataType>::assignChannel(LUNA::CSP::ChannelIn<DataType>*) [with DataType = int] (_ZN4LUNA3CSP6WriterIiE13assignChannelEPNS0_9ChannelInIiEE, funcdef_no=4520, decl_uid=80191, symbol_order=2387)

void LUNA::CSP::Writer<DataType>::assignChannel(LUNA::CSP::ChannelIn<DataType>*) [with DataType = int] (struct Writer * const this, struct ChannelIn * channel)
{
  <bb 2>:
  this_2(D)->m_channel = channel_3(D);
  return;

}



;; Function int LUNA::CSP::Writer<DataType>::logDoneAndValue() [with DataType = int] (_ZN4LUNA3CSP6WriterIiE15logDoneAndValueEv, funcdef_no=4521, decl_uid=80203, symbol_order=2388)

int LUNA::CSP::Writer<DataType>::logDoneAndValue() [with DataType = int] (struct Writer * const this)
{
  int * _3;
  int _4;
  float _6;

  <bb 2>:
  _3 = this_2(D)->m_variable;
  _4 = *_3;
  _6 = (float) _4;
  this_2(D)->m_variable_float = _6;
  return 1;

}



;; Function LUNA::Utility::TreeNode<T>::~TreeNode() [with T = LUNA::CSP::CSPConstruct*] (_ZN4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEED0Ev, funcdef_no=4153, decl_uid=35351, symbol_order=1234)

LUNA::Utility::TreeNode<T>::~TreeNode() [with T = LUNA::CSP::CSPConstruct*] (struct TreeNode * const this)
{
  <bb 2>:
  *this_2(D) ={v} {CLOBBER};
  operator delete (this_2(D));
  return this_2(D);

}



;; Function LUNA::Utility::ListItem<ListObjectType>::~ListItem() [with ListObjectType = LUNA::CSP::IWriter] (_ZN4LUNA7Utility8ListItemINS_3CSP7IWriterEED0Ev, funcdef_no=4188, decl_uid=46764, symbol_order=1269)

LUNA::Utility::ListItem<ListObjectType>::~ListItem() [with ListObjectType = LUNA::CSP::IWriter] (struct ListItem * const this)
{
  <bb 2>:
  *this_2(D) ={v} {CLOBBER};
  operator delete (this_2(D));
  return this_2(D);

}



;; Function virtual LUNA::CSP::Sequential::~Sequential() (_ZN4LUNA3CSP10SequentialD0Ev, funcdef_no=3927, decl_uid=74211, symbol_order=1047)

virtual LUNA::CSP::Sequential::~Sequential() (struct Sequential * const this)
{
  <bb 2>:
  *this_2(D) ={v} {CLOBBER};
  operator delete (this_2(D));
  return this_2(D);

}



;; Function LUNA::CSP::Writer<DataType>::~Writer() [with DataType = int] (_ZN4LUNA3CSP6WriterIiED2Ev, funcdef_no=4225, decl_uid=80250, symbol_order=1306)

LUNA::CSP::Writer<DataType>::~Writer() [with DataType = int] (struct Writer * const this)
{
  struct Runnable * _8;

  <bb 2>:
  MEM[(struct ListItem *)this_2(D) + 64B] ={v} {CLOBBER};
  MEM[(struct CSProcess *)this_2(D)].D.42484._vptr.Runnable = &MEM[(void *)&_ZTVN4LUNA3CSP9CSProcessE + 8B];
  MEM[(struct CSPConstruct *)this_2(D) + 8B] ={v} {CLOBBER};
  _8 = &MEM[(struct CSProcess *)this_2(D)].D.42484;
  LUNA::Runnable::~Runnable (_8);
  *this_2(D) ={v} {CLOBBER};
  return this_2(D);

}



;; Function virtual void LUNA::CSP::CSProcess::setIThread(LUNA::Threading::IThread*) (_ZN4LUNA3CSP9CSProcess10setIThreadEPNS_9Threading7IThreadE, funcdef_no=1978, decl_uid=42453, symbol_order=477)

virtual void LUNA::CSP::CSProcess::setIThread(LUNA::Threading::IThread*) (struct CSProcess * const this, struct IThread * thread)
{
  struct Runnable * _2;

  <bb 2>:
  _2 = &this_1(D)->D.42484;
  LUNA::Runnable::setIThread (_2, thread_4(D));
  return;

}



;; Function virtual bool LUNA::CSP::CSProcess::nextIteration() (_ZN4LUNA3CSP9CSProcess13nextIterationEv, funcdef_no=1980, decl_uid=42457, symbol_order=481)

virtual bool LUNA::CSP::CSProcess::nextIteration() (struct CSProcess * const this)
{
  bool D.88310;
  bool _2;
  struct IThread * _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () _8;
  bool _10;
  bool _11;
  struct IThreadBlocker * _14;
  int (*__vtbl_ptr_type) () * _15;
  int (*__vtbl_ptr_type) () _16;
  struct IThread * _17;
  bool _18;
  bool _19;

  <bb 2>:
  _6 = this_5(D)->D.42484.m_thread;
  _7 = _6->D.35164._vptr.Uncopyable;
  _8 = MEM[(int (*__vtbl_ptr_type) () *)_7 + 60B];
  _10 = OBJ_TYPE_REF(_8;(struct IThread)_6->15) (_6);
  if (_10 != 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _11 = this_5(D)->D.42485.m_exit;
  if (_11 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  # _2 = PHI <_19(5), 0(3), 0(2)>
  return _2;

  <bb 5>:
  _14 = this_5(D)->m_activate;
  _15 = _14->D.41986._vptr.Uncopyable;
  _16 = MEM[(int (*__vtbl_ptr_type) () *)_15 + 8B];
  _17 = this_5(D)->D.42484.m_thread;
  OBJ_TYPE_REF(_16;(struct IThreadBlocker)_14->2) (_14, _17, 0B);
  _18 = this_5(D)->D.42485.m_exit;
  _19 = ~_18;
  goto <bb 4>;

}



;; Function void LUNA::Utility::TreeNode<T>::append_child(LUNA::Utility::TreeNode<T>::tree_node_t*) [with T = LUNA::CSP::CSPConstruct*] (_ZN4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEE12append_childEPS5_.part.2, funcdef_no=4527, decl_uid=86697, symbol_order=2521) (unlikely executed)

void LUNA::Utility::TreeNode<T>::append_child(LUNA::Utility::TreeNode<T>::tree_node_t*) [with T = LUNA::CSP::CSPConstruct*] ()
{
  struct TreeNode * const this;
  struct tree_node_t * x;
  static const char __PRETTY_FUNCTION__[217] = "void LUNA::Utility::TreeNode<T>::append_child(LUNA::Utility::TreeNode<T>::tree_node_t*) [with T = LUNA::CSP::CSPConstruct*; LUNA::Utility::TreeNode<T>::tree_node_t = LUNA::Utility::TreeNode<LUNA::CSP::CSPConstruct*>]";

  <bb 2>:
  __assert_fail ("first_child == __null", "/home/rtsd/RTSD/LUNA/luna-xenomai-arm-v7-Posix/include/utility/Tree.h", 126, &__PRETTY_FUNCTION__);

}



;; Function void LUNA::Utility::TreeNode<T>::append_child(LUNA::Utility::TreeNode<T>::tree_node_t*) [with T = LUNA::CSP::CSPConstruct*; LUNA::Utility::TreeNode<T>::tree_node_t = LUNA::Utility::TreeNode<LUNA::CSP::CSPConstruct*>] (_ZN4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEE12append_childEPS5_, funcdef_no=4168, decl_uid=35327, symbol_order=1249)

void LUNA::Utility::TreeNode<T>::append_child(LUNA::Utility::TreeNode<T>::tree_node_t*) [with T = LUNA::CSP::CSPConstruct*; LUNA::Utility::TreeNode<T>::tree_node_t = LUNA::Utility::TreeNode<LUNA::CSP::CSPConstruct*>] (struct TreeNode * const this, struct tree_node_t * x)
{
  struct TreeNode * _6;
  struct TreeNode * _8;

  <bb 2>:
  x_3(D)->parent = this_4(D);
  _6 = this_4(D)->last_child;
  if (_6 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6->next_sibling = x_3(D);
  goto <bb 7>;

  <bb 4>:
  _8 = this_4(D)->first_child;
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  LUNA::Utility::TreeNode<LUNA::CSP::CSPConstruct*>::_ZN4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEE12append_childEPS5_.part.2 ();

  <bb 6>:
  this_4(D)->first_child = x_3(D);

  <bb 7>:
  x_3(D)->prev_sibling = _6;
  this_4(D)->last_child = x_3(D);
  x_3(D)->next_sibling = 0B;
  return;

}



;; Function static void LUNA::Utility::SingletonHolder<T>::DestroySingleton() [with T = LUNA::EmergencyManager] (_ZN4LUNA7Utility15SingletonHolderINS_16EmergencyManagerEE16DestroySingletonEv, funcdef_no=4282, decl_uid=42318, symbol_order=1371)

static void LUNA::Utility::SingletonHolder<T>::DestroySingleton() [with T = LUNA::EmergencyManager] ()
{
  bool m_destroyed.70_3;
  struct EmergencyManager * m_instance.71_4;

  <bb 2>:
  m_destroyed.70_3 = m_destroyed;
  if (m_destroyed.70_3 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("!m_destroyed", "/home/rtsd/RTSD/LUNA/luna-xenomai-arm-v7-Posix/include/utility/Singleton.h", 152, &__PRETTY_FUNCTION__);

  <bb 4>:
  m_instance.71_4 ={v} m_instance;
  if (m_instance.71_4 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  LUNA::EmergencyManager::~EmergencyManager (m_instance.71_4);
  operator delete (m_instance.71_4);

  <bb 6>:
  m_instance ={v} 0B;
  m_destroyed = 1;
  return;

}



;; Function T& LUNA::Utility::TreeNode<T>::iterator_base::operator*() const [with T = LUNA::CSP::CSPConstruct*] (_ZNK4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEE13iterator_basedeEv.part.9, funcdef_no=4534, decl_uid=86884, symbol_order=2546) (unlikely executed)

T& LUNA::Utility::TreeNode<T>::iterator_base::operator*() const [with T = LUNA::CSP::CSPConstruct*] ()
{
  const struct iterator_base * const this;
  static const char __PRETTY_FUNCTION__[100] = "T& LUNA::Utility::TreeNode<T>::iterator_base::operator*() const [with T = LUNA::CSP::CSPConstruct*]";

  <bb 2>:
  __assert_fail ("node != __null", "/home/rtsd/RTSD/LUNA/luna-xenomai-arm-v7-Posix/include/utility/Tree.h", 213, &__PRETTY_FUNCTION__);

}



;; Function virtual void LUNA::CSP::Sequential::activate() (_ZN4LUNA3CSP10Sequential8activateEv, funcdef_no=3920, decl_uid=74187, symbol_order=1040)

virtual void LUNA::CSP::Sequential::activate() (struct Sequential * const this)
{
  struct tree_node_t * SR.177;
  struct tree_node_t * SR.176;
  struct TreeNode * _2;
  struct CSPConstruct * _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () _9;
  struct TreeNode * _11;
  struct TreeNode * _12;

  <bb 2>:
  _11 = MEM[(struct TreeNode *)this_1(D)].first_child;
  if (_11 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _12 = MEM[(struct tree_node_t *)_11].parent;
  MEM[(struct Sequential *)this_1(D) + 48B] = _11;
  MEM[(struct Sequential *)this_1(D) + 52B] = _12;
  MEM[(struct Sequential *)this_1(D) + 56B] = 0B;
  MEM[(struct Sequential *)this_1(D) + 60B] = _11;
  _6 = MEM[(struct CSPConstruct * &)_11 + 24];
  _7 = _6->D.35429._vptr.TreeNode;
  _9 = MEM[(int (*__vtbl_ptr_type) () *)_7 + 24B];
  OBJ_TYPE_REF(_9;(struct CSPConstruct)_6->6) (_6);
  return;

  <bb 4>:
  MEM[(struct Sequential *)this_1(D) + 48B] = 0B;
  _2 = &this_1(D)->D.74220.D.35429;
  MEM[(struct Sequential *)this_1(D) + 52B] = _2;
  MEM[(struct Sequential *)this_1(D) + 56B] = 0B;
  MEM[(struct Sequential *)this_1(D) + 60B] = 0B;
  LUNA::Utility::TreeNode<LUNA::CSP::CSPConstruct*>::iterator_base::_ZNK4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEE13iterator_basedeEv.part.9 ();

}



;; Function int LUNA::CSP::Writer<DataType>::compareTo(LUNA::CSP::IWriter*) [with DataType = int] (_ZN4LUNA3CSP6WriterIiE9compareToEPNS0_7IWriterE, funcdef_no=4519, decl_uid=80194, symbol_order=2386)

int LUNA::CSP::Writer<DataType>::compareTo(LUNA::CSP::IWriter*) [with DataType = int] (struct Writer * const this, struct IWriter * obj)
{
  priority_t D.88350;
  int _3;
  int (*__vtbl_ptr_type) () * _5;
  int (*__vtbl_ptr_type) () _6;
  struct CSProcess * _7;
  int _9;
  int _10;
  void * PROF_11;
  int _13;
  priority_t _15;

  <bb 2>:
  _3 = this_2(D)->D.80253.D.46813.D.42485.m_priority;
  _5 = obj_4(D)->D.46813.D.42484._vptr.Runnable;
  _6 = MEM[(int (*__vtbl_ptr_type) () *)_5 + 24B];
  _7 = &obj_4(D)->D.46813;
  PROF_11 = [obj_type_ref] OBJ_TYPE_REF(_6;(struct CSProcess)_7->6);
  if (PROF_11 == getPriority)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _15 = MEM[(struct CSProcess *)obj_4(D)].D.42485.m_priority;
  goto <bb 5>;

  <bb 4>:
  _13 = OBJ_TYPE_REF(_6;(struct CSProcess)_7->6) (_7);

  <bb 5>:
  # _9 = PHI <_13(4), _15(3)>
  _10 = _3 - _9;
  return _10;

}



;; Function LUNA::CSP::Writer<DataType>::~Writer() [with DataType = int] (_ZN4LUNA3CSP6WriterIiED0Ev, funcdef_no=4227, decl_uid=80244, symbol_order=1312)

LUNA::CSP::Writer<DataType>::~Writer() [with DataType = int] (struct Writer * const this)
{
  void * D.88363;
  struct Runnable * _5;

  <bb 2>:
  MEM[(struct ListItem *)this_2(D) + 64B] ={v} {CLOBBER};
  MEM[(struct CSProcess *)this_2(D)].D.42484._vptr.Runnable = &MEM[(void *)&_ZTVN4LUNA3CSP9CSProcessE + 8B];
  MEM[(struct CSPConstruct *)this_2(D) + 8B] ={v} {CLOBBER};
  _5 = &MEM[(struct CSProcess *)this_2(D)].D.42484;
  LUNA::Runnable::~Runnable (_5);
  *this_2(D) ={v} {CLOBBER};
  operator delete (this_2(D));
  return this_2(D);

}



;; Function virtual void LUNA::CSP::CSPConstruct::done() (_ZN4LUNA3CSP12CSPConstruct4doneEv, funcdef_no=1426, decl_uid=35399, symbol_order=420)

virtual void LUNA::CSP::CSPConstruct::done() (struct CSPConstruct * const this)
{
  bool _3;
  struct TreeNode * _6;
  struct CSPConstruct * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;

  <bb 2>:
  _3 = this_2(D)->m_exit;
  if (_3 != 0)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 3>:
  _6 = this_2(D)->D.35429.parent;
  if (_6 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _7 = _6->data;
  _8 = _7->D.35429._vptr.TreeNode;
  _9 = MEM[(int (*__vtbl_ptr_type) () *)_8 + 28B];
  OBJ_TYPE_REF(_9;(struct CSPConstruct)_7->7) (_7);

  <bb 5>:
  return;

}



;; Function ModelTimer::Producer::Producer::~Producer() (_ZN10ModelTimer8Producer8ProducerD2Ev, funcdef_no=4090, decl_uid=80125, symbol_order=1155)

ModelTimer::Producer::Producer::~Producer() (struct Producer * const this)
{
  void * D.88388;
  void * D.88386;
  void * D.88384;
  void * D.88382;
  void * D.88380;
  void * D.88378;
  struct Sequential * _9;
  int (*__vtbl_ptr_type) () * _10;
  int (*__vtbl_ptr_type) () _11;
  struct Writer * _13;
  int (*__vtbl_ptr_type) () * _14;
  int (*__vtbl_ptr_type) () _15;
  struct Writer * _17;
  int (*__vtbl_ptr_type) () * _18;
  int (*__vtbl_ptr_type) () _19;
  struct Writer * _21;
  int (*__vtbl_ptr_type) () * _22;
  int (*__vtbl_ptr_type) () _23;
  struct cpp_producer * _25;
  int (*__vtbl_ptr_type) () * _26;
  int (*__vtbl_ptr_type) () _27;
  void * PROF_36;
  void * PROF_38;
  void * PROF_40;
  struct Runnable * _42;
  struct Runnable * _43;
  struct Runnable * _44;

  <bb 2>:
  this_7(D)->D.80128.D.74220.D.35429._vptr.TreeNode = &MEM[(void *)&_ZTVN10ModelTimer8Producer8ProducerE + 8B];
  _9 = this_7(D)->mySEQUENTIAL;
  if (_9 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _10 = _9->D.74220.D.35429._vptr.TreeNode;
  _11 = MEM[(int (*__vtbl_ptr_type) () *)_10 + 4B];
  OBJ_TYPE_REF(_11;(struct Sequential)_9->1) (_9);

  <bb 4>:
  _13 = this_7(D)->mywriter_ch2;
  if (_13 != 0B)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  _14 = _13->D.80253.D.46813.D.42484._vptr.Runnable;
  _15 = MEM[(int (*__vtbl_ptr_type) () *)_14 + 16B];
  PROF_36 = [obj_type_ref] OBJ_TYPE_REF(_15;(struct Writer)_13->4);
  if (PROF_36 == __deleting_dtor )
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  MEM[(struct ListItem *)_13 + 64B] ={v} {CLOBBER};
  MEM[(struct CSProcess *)_13].D.42484._vptr.Runnable = &MEM[(void *)&_ZTVN4LUNA3CSP9CSProcessE + 8B];
  MEM[(struct CSPConstruct *)_13 + 8B] ={v} {CLOBBER};
  _42 = &MEM[(struct CSProcess *)_13].D.42484;
  LUNA::Runnable::~Runnable (_42);
  *_13 ={v} {CLOBBER};
  operator delete (_13);
  goto <bb 8>;

  <bb 7>:
  OBJ_TYPE_REF(_15;(struct Writer)_13->4) (_13);

  <bb 8>:
  _17 = this_7(D)->mywriter_ch1;
  if (_17 != 0B)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 9>:
  _18 = _17->D.80253.D.46813.D.42484._vptr.Runnable;
  _19 = MEM[(int (*__vtbl_ptr_type) () *)_18 + 16B];
  PROF_38 = [obj_type_ref] OBJ_TYPE_REF(_19;(struct Writer)_17->4);
  if (PROF_38 == __deleting_dtor )
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  MEM[(struct ListItem *)_17 + 64B] ={v} {CLOBBER};
  MEM[(struct CSProcess *)_17].D.42484._vptr.Runnable = &MEM[(void *)&_ZTVN4LUNA3CSP9CSProcessE + 8B];
  MEM[(struct CSPConstruct *)_17 + 8B] ={v} {CLOBBER};
  _43 = &MEM[(struct CSProcess *)_17].D.42484;
  LUNA::Runnable::~Runnable (_43);
  *_17 ={v} {CLOBBER};
  operator delete (_17);
  goto <bb 12>;

  <bb 11>:
  OBJ_TYPE_REF(_19;(struct Writer)_17->4) (_17);

  <bb 12>:
  _21 = this_7(D)->mysignalWriter;
  if (_21 != 0B)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 13>:
  _22 = _21->D.80253.D.46813.D.42484._vptr.Runnable;
  _23 = MEM[(int (*__vtbl_ptr_type) () *)_22 + 16B];
  PROF_40 = [obj_type_ref] OBJ_TYPE_REF(_23;(struct Writer)_21->4);
  if (PROF_40 == __deleting_dtor )
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  MEM[(struct ListItem *)_21 + 64B] ={v} {CLOBBER};
  MEM[(struct CSProcess *)_21].D.42484._vptr.Runnable = &MEM[(void *)&_ZTVN4LUNA3CSP9CSProcessE + 8B];
  MEM[(struct CSPConstruct *)_21 + 8B] ={v} {CLOBBER};
  _44 = &MEM[(struct CSProcess *)_21].D.42484;
  LUNA::Runnable::~Runnable (_44);
  *_21 ={v} {CLOBBER};
  operator delete (_21);
  goto <bb 16>;

  <bb 15>:
  OBJ_TYPE_REF(_23;(struct Writer)_21->4) (_21);

  <bb 16>:
  _25 = this_7(D)->mycpp_producer;
  if (_25 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _26 = _25->D.80077.D.45194.D.42484._vptr.Runnable;
  _27 = MEM[(int (*__vtbl_ptr_type) () *)_26 + 16B];
  OBJ_TYPE_REF(_27;(struct cpp_producer)_25->4) (_25);

  <bb 18>:
  *this_7(D) ={v} {CLOBBER};
  return this_7(D);

}



;; Function virtual ModelTimer::Producer::Producer::~Producer() (_ZN10ModelTimer8Producer8ProducerD0Ev, funcdef_no=4092, decl_uid=80119, symbol_order=1157)

virtual ModelTimer::Producer::Producer::~Producer() (struct Producer * const this)
{
  <bb 2>:
  ModelTimer::Producer::Producer::~Producer (this_2(D));
  operator delete (this_2(D));
  return this_2(D);

}



;; Function void* LUNA::CSP::Writer<DataType>::run() [with DataType = int] (_ZN4LUNA3CSP6WriterIiE3runEv, funcdef_no=4513, decl_uid=80197, symbol_order=2380)

void* LUNA::CSP::Writer<DataType>::run() [with DataType = int] (struct Writer * const this)
{
  bool D.88404;
  bool D.88402;
  struct IThreadBlocker * _5;
  struct ChannelIn * _8;
  int (*__vtbl_ptr_type) () * _9;
  int (*__vtbl_ptr_type) () _10;
  struct IWriter * _11;
  struct IThread * _14;
  bool _15;
  struct TreeNode * _16;
  struct CSPConstruct * _17;
  int (*__vtbl_ptr_type) () * _18;
  int (*__vtbl_ptr_type) () _19;
  int (*__vtbl_ptr_type) () * _20;
  int (*__vtbl_ptr_type) () _21;
  bool _22;
  bool _23;
  int (*__vtbl_ptr_type) () * _27;
  int (*__vtbl_ptr_type) () _28;
  struct IThread * _29;
  bool _30;
  struct TreeNode * _40;

  <bb 2>:
  goto <bb 9>;

  <bb 3>:
  _8 = this_3(D)->m_channel;
  _9 = _8->_vptr.ChannelIn;
  _10 = *_9;
  _11 = &this_3(D)->D.80253;
  OBJ_TYPE_REF(_10;(struct ChannelIn)_8->0) (_8, _11);
  _15 = MEM[(struct CSPConstruct *)this_3(D) + 8B].m_exit;
  if (_15 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 11>;

  <bb 5>:
  _16 = MEM[(struct CSPConstruct *)this_3(D) + 8B].D.35429.parent;
  if (_16 != 0B)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 10>;

  <bb 7>:
  # _40 = PHI <_16(5)>

  <bb 8>:
  _17 = _40->data;
  _18 = _17->D.35429._vptr.TreeNode;
  _19 = MEM[(int (*__vtbl_ptr_type) () *)_18 + 28B];
  OBJ_TYPE_REF(_19;(struct CSPConstruct)_17->7) (_17);

  <bb 9>:

  <bb 10>:

  <bb 11>:
  _14 = MEM[(struct CSProcess *)this_3(D)].D.42484.m_thread;
  _20 = _14->D.35164._vptr.Uncopyable;
  _21 = MEM[(int (*__vtbl_ptr_type) () *)_20 + 60B];
  _22 = OBJ_TYPE_REF(_21;(struct IThread)_14->15) (_14);
  if (_22 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  return 0B;

  <bb 13>:
  _23 = MEM[(struct CSProcess *)this_3(D)].D.42485.m_exit;
  if (_23 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 14>:
  _5 = MEM[(struct CSProcess *)this_3(D)].m_activate;
  _27 = _5->D.41986._vptr.Uncopyable;
  _28 = MEM[(int (*__vtbl_ptr_type) () *)_27 + 8B];
  _29 = MEM[(struct CSProcess *)this_3(D)].D.42484.m_thread;
  OBJ_TYPE_REF(_28;(struct IThreadBlocker)_5->2) (_5, _29, 0B);
  _30 = MEM[(struct CSProcess *)this_3(D)].D.42485.m_exit;
  if (_30 != 0)
    goto <bb 12>;
  else
    goto <bb 3>;

}



;; Function virtual void LUNA::CSP::Sequential::done() (_ZN4LUNA3CSP10Sequential4doneEv, funcdef_no=3921, decl_uid=74189, symbol_order=1041)

virtual void LUNA::CSP::Sequential::done() (struct Sequential * const this)
{
  struct tree_node_t * const prephitmp_1;
  struct tree_node_t * const _5;
  bool _6;
  struct CSPConstruct * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;
  struct tree_node_t * _13;
  struct TreeNode * _14;
  struct TreeNode * _17;
  bool _20;
  struct CSPConstruct * _21;
  int (*__vtbl_ptr_type) () * _22;
  int (*__vtbl_ptr_type) () _23;

  <bb 2>:
  _13 = MEM[(struct sibling_iterator *)this_2(D) + 48B].D.35570.node;
  if (_13 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _14 = _13->next_sibling;
  MEM[(struct sibling_iterator *)this_2(D) + 48B].D.35570.node = _14;

  <bb 4>:
  # prephitmp_1 = PHI <_13(2), _14(3)>
  _5 = MEM[(struct tree_node_t * *)this_2(D) + 56B];
  if (prephitmp_1 != _5)
    goto <bb 12>;
  else
    goto <bb 5>;

  <bb 5>:
  _20 = MEM[(struct CSPConstruct *)this_2(D)].m_exit;
  if (_20 != 0)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 6>:
  if (prephitmp_1 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  LUNA::Utility::TreeNode<LUNA::CSP::CSPConstruct*>::iterator_base::_ZNK4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEE13iterator_basedeEv.part.9 ();

  <bb 8>:
  _7 = MEM[(struct CSPConstruct * &)prephitmp_1 + 24];
  _8 = _7->D.35429._vptr.TreeNode;
  _9 = MEM[(int (*__vtbl_ptr_type) () *)_8 + 24B];
  OBJ_TYPE_REF(_9;(struct CSPConstruct)_7->6) (_7);
  goto <bb 11>;

  <bb 9>:
  _17 = MEM[(struct CSPConstruct *)this_2(D)].D.35429.parent;
  if (_17 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _21 = _17->data;
  _22 = _21->D.35429._vptr.TreeNode;
  _23 = MEM[(int (*__vtbl_ptr_type) () *)_22 + 28B];
  OBJ_TYPE_REF(_23;(struct CSPConstruct)_21->7) (_21);

  <bb 11>:
  return;

  <bb 12>:
  _6 = this_2(D)->D.74220.m_exit;
  if (_6 != 0)
    goto <bb 11>;
  else
    goto <bb 6>;

}



;; Function virtual void LUNA::CSP::CSPConstruct::exit() (_ZN4LUNA3CSP12CSPConstruct4exitEv, funcdef_no=1428, decl_uid=35403, symbol_order=422)

virtual void LUNA::CSP::CSPConstruct::exit() (struct CSPConstruct * const this)
{
  struct tree_node_t * iter$node;
  struct CSPConstruct * _5;
  int (*__vtbl_ptr_type) () * _6;
  int (*__vtbl_ptr_type) () _7;

  <bb 2>:
  this_3(D)->m_exit = 1;
  iter$node_9 = MEM[(struct TreeNode *)this_3(D)].first_child;
  if (iter$node_9 != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # iter$node_12 = PHI <iter$node_9(4), iter$node_11(6)>
  _5 = MEM[(struct CSPConstruct * &)iter$node_12 + 24];
  _6 = _5->D.35429._vptr.TreeNode;
  _7 = MEM[(int (*__vtbl_ptr_type) () *)_6 + 36B];
  OBJ_TYPE_REF(_7;(struct CSPConstruct)_5->9) (_5);
  iter$node_11 = iter$node_12->next_sibling;
  if (iter$node_11 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 3>;

  <bb 6>:
  goto <bb 5>;

}



;; Function virtual int LUNA::CSP::Sequential::setPriority(LUNA::Threading::priority_t) (_ZN4LUNA3CSP10Sequential11setPriorityEi, funcdef_no=3923, decl_uid=74195, symbol_order=1043)

virtual int LUNA::CSP::Sequential::setPriority(LUNA::Threading::priority_t) (struct Sequential * const this, priority_t priority)
{
  struct tree_node_t * riter$node;
  struct tree_node_t * iter$node;
  priority_t old;
  int ret;
  struct CSPConstruct * _11;
  int (*__vtbl_ptr_type) () * _12;
  int (*__vtbl_ptr_type) () _13;
  struct CSPConstruct * _17;
  int (*__vtbl_ptr_type) () * _18;
  int (*__vtbl_ptr_type) () _19;

  <bb 2>:
  old_9 = this_8(D)->D.74220.m_priority;
  iter$node_23 = MEM[(struct TreeNode *)this_8(D)].first_child;
  if (iter$node_23 != 0B)
    goto <bb 3>;
  else
    goto <bb 15>;

  <bb 3>:

  <bb 4>:
  # iter$node_39 = PHI <iter$node_23(3), iter$node_29(11)>
  _11 = MEM[(struct CSPConstruct * &)iter$node_39 + 24];
  _12 = _11->D.35429._vptr.TreeNode;
  _13 = MEM[(int (*__vtbl_ptr_type) () *)_12 + 16B];
  ret_16 = OBJ_TYPE_REF(_13;(struct CSPConstruct)_11->4) (_11, priority_14(D));
  if (ret_16 != 0)
    goto <bb 5>;
  else
    goto <bb 10>;

  <bb 5>:
  # ret_32 = PHI <ret_16(4)>
  # iter$node_5 = PHI <iter$node_39(4)>
  riter$node_25 = MEM[(struct TreeNode *)this_8(D)].first_child;
  if (iter$node_5 != riter$node_25)
    goto <bb 6>;
  else
    goto <bb 16>;

  <bb 6>:
  if (riter$node_25 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  __assert_fail ("node != __null", "/home/rtsd/RTSD/LUNA/luna-xenomai-arm-v7-Posix/include/utility/Tree.h", 213, &__PRETTY_FUNCTION__);

  <bb 8>:

  <bb 9>:
  # riter$node_26 = PHI <riter$node_25(8), riter$node_27(14)>
  _17 = MEM[(struct CSPConstruct * &)riter$node_26 + 24];
  _18 = _17->D.35429._vptr.TreeNode;
  _19 = MEM[(int (*__vtbl_ptr_type) () *)_18 + 16B];
  OBJ_TYPE_REF(_19;(struct CSPConstruct)_17->4) (_17, old_9);
  riter$node_27 = riter$node_26->next_sibling;
  if (iter$node_5 != riter$node_27)
    goto <bb 13>;
  else
    goto <bb 16>;

  <bb 10>:
  iter$node_29 = iter$node_39->next_sibling;
  if (iter$node_29 != 0B)
    goto <bb 11>;
  else
    goto <bb 15>;

  <bb 11>:
  goto <bb 4>;

  <bb 12>:
  # ret_22 = PHI <ret_32(16), 0(15)>
  return ret_22;

  <bb 13>:
  if (riter$node_27 == 0B)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 9>;

  <bb 15>:
  this_8(D)->D.74220.m_priority = priority_14(D);
  goto <bb 12>;

  <bb 16>:
  goto <bb 12>;

}



;; Function virtual void LUNA::CSP::CSProcess::exit() (_ZN4LUNA3CSP9CSProcess4exitEv, funcdef_no=1981, decl_uid=42459, symbol_order=482)

virtual void LUNA::CSP::CSProcess::exit() (struct CSProcess * const this)
{
  struct tree_node_t * iter$node;
  struct IThreadBlocker * _4;
  struct IThreadBlocker * _5;
  int (*__vtbl_ptr_type) () * _6;
  int (*__vtbl_ptr_type) () _7;
  bool _9;
  struct CSPConstruct * _15;
  int (*__vtbl_ptr_type) () * _16;
  int (*__vtbl_ptr_type) () _17;
  int (*__vtbl_ptr_type) () * _22;
  int (*__vtbl_ptr_type) () _23;

  <bb 2>:
  MEM[(struct CSPConstruct *)this_1(D) + 8B].m_exit = 1;
  iter$node_12 = MEM[(struct TreeNode *)this_1(D) + 8B].first_child;
  if (iter$node_12 != 0B)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 3>:

  <bb 4>:
  # iter$node_19 = PHI <iter$node_12(3), iter$node_18(5)>
  _15 = MEM[(struct CSPConstruct * &)iter$node_19 + 24];
  _16 = _15->D.35429._vptr.TreeNode;
  _17 = MEM[(int (*__vtbl_ptr_type) () *)_16 + 36B];
  OBJ_TYPE_REF(_17;(struct CSPConstruct)_15->9) (_15);
  iter$node_18 = iter$node_19->next_sibling;
  if (iter$node_18 != 0B)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 5>:
  goto <bb 4>;

  <bb 6>:
  _4 = this_1(D)->m_activate;
  _22 = _4->D.41986._vptr.Uncopyable;
  _23 = MEM[(int (*__vtbl_ptr_type) () *)_22 + 12B];
  OBJ_TYPE_REF(_23;(struct IThreadBlocker)_4->3) (_4, 0B);

  <bb 7>:
  return;

  <bb 9>:

  <bb 8>:
  _5 = this_1(D)->m_activate;
  _6 = _5->D.41986._vptr.Uncopyable;
  _7 = MEM[(int (*__vtbl_ptr_type) () *)_6 + 16B];
  _9 = OBJ_TYPE_REF(_7;(struct IThreadBlocker)_5->4) (_5);
  if (_9 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

}



;; Function void LUNA::log(LUNA::loglevel_enum, const char*, ...) (_ZN4LUNA3logENS_13loglevel_enumEPKcz, funcdef_no=1312, decl_uid=34408, symbol_order=376)

void LUNA::log(LUNA::loglevel_enum, const char*, ...) (loglevel_enum loglevel, const char * format)
{
  void * valist$__ap;
  struct __gnuc_va_list __arg;
  struct va_list valist;
  struct va_list var_args;
  int loglevel.18_8;
  struct _IO_FILE * stdout.19_9;

  <bb 2>:
  __builtin_va_start (&var_args, 0);
  valist$__ap_5 = MEM[(struct  *)&var_args];
  loglevel.18_8 = (int) loglevel_3(D);
  printf ("<%i> ", loglevel.18_8);
  MEM[(struct  *)&__arg] = valist$__ap_5;
  stdout.19_9 = stdout;
  vfprintf (stdout.19_9, format_4(D), __arg);
  __builtin_va_end (&var_args);
  var_args ={v} {CLOBBER};
  return;

}



;; Function void LUNA::log(bool, LUNA::loglevel_enum, const char*, ...) (_ZN4LUNA3logEbNS_13loglevel_enumEPKcz, funcdef_no=1314, decl_uid=34419, symbol_order=378)

void LUNA::log(bool, LUNA::loglevel_enum, const char*, ...) (bool condition, loglevel_enum loglevel, const char * format)
{
  void * valist$__ap;
  struct __gnuc_va_list __arg;
  struct va_list valist;
  struct va_list var_args;
  int loglevel.18_10;
  struct _IO_FILE * stdout.19_11;

  <bb 2>:
  if (condition_2(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __builtin_va_start (&var_args, 0);
  valist$__ap_7 = MEM[(struct  *)&var_args];
  loglevel.18_10 = (int) loglevel_5(D);
  printf ("<%i> ", loglevel.18_10);
  MEM[(struct  *)&__arg] = valist$__ap_7;
  stdout.19_11 = stdout;
  vfprintf (stdout.19_11, format_6(D), __arg);
  __builtin_va_end (&var_args);
  var_args ={v} {CLOBBER};

  <bb 4>:
  return;

}



;; Function virtual void LUNA::CSP::CSProcess::activate() (_ZN4LUNA3CSP9CSProcess8activateEv, funcdef_no=1979, decl_uid=42455, symbol_order=478)

virtual void LUNA::CSP::CSProcess::activate() (struct CSProcess * const this)
{
  static const char __FUNCTION__[9] = "activate";
  struct IThread * _3;
  bool _4;
  const char * _5;
  struct IThreadBlocker * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;

  <bb 2>:
  _3 = this_2(D)->D.42484.m_thread;
  _4 = _3 == 0B;
  _5 = MEM[(const char * *)this_2(D) + 48B];
  LUNA::log (_4, 5, "[%s]::%s - No thread assigned, and therefore cannot be run.\n", _5, &__FUNCTION__);
  _7 = this_2(D)->m_activate;
  _8 = _7->D.41986._vptr.Uncopyable;
  _9 = MEM[(int (*__vtbl_ptr_type) () *)_8 + 12B];
  OBJ_TYPE_REF(_9;(struct IThreadBlocker)_7->3) (_7, 0B);
  return;

}



;; Function LUNA::CSP::Sequential::Sequential(LUNA::CSP::CSPConstruct*, ...) (_ZN4LUNA3CSP10SequentialC2EPNS0_12CSPConstructEz, funcdef_no=3918, decl_uid=74208, symbol_order=1038)

LUNA::CSP::Sequential::Sequential(LUNA::CSP::CSPConstruct*, ...) (struct Sequential * const this, struct CSPConstruct * child_process1)
{
  void * arg___ap_lsm.451;
  struct va_list arg;
  struct CSPConstruct * _4;
  void * _13;
  struct TreeNode * prephitmp_17;
  struct TreeNode * pretmp_21;
  struct TreeNode * _38;

  <bb 2>:
  _4 = &this_3(D)->D.74220;
  MEM[(struct TreeNode *)this_3(D)].parent = 0B;
  MEM[(struct TreeNode *)this_3(D)].first_child = 0B;
  MEM[(struct TreeNode *)this_3(D)].last_child = 0B;
  MEM[(struct TreeNode *)this_3(D)].prev_sibling = 0B;
  MEM[(struct TreeNode *)this_3(D)].next_sibling = 0B;
  MEM[(struct TreeNode *)this_3(D)].data = _4;
  MEM[(struct CSPConstruct *)this_3(D)].m_guard = 0B;
  MEM[(struct CSPConstruct *)this_3(D)].m_exit = 0;
  MEM[(struct CSPConstruct *)this_3(D)].m_priority = -1;
  MEM[(const char * *)this_3(D) + 44B] = "CSPConstruct";
  this_3(D)->D.74220.D.35429._vptr.TreeNode = &MEM[(void *)&_ZTVN4LUNA3CSP10SequentialE + 8B];
  MEM[(struct iterator_base *)this_3(D) + 48B].node = 0B;
  MEM[(struct sibling_iterator *)this_3(D) + 48B].parent_ = 0B;
  MEM[(struct iterator_base *)this_3(D) + 56B].node = 0B;
  MEM[(struct sibling_iterator *)this_3(D) + 56B].parent_ = 0B;
  MEM[(const char * *)this_3(D) + 40B] = "Sequential";
  __builtin_va_start (&arg, 0);
  if (child_process1_10(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __builtin_va_end (&arg);
  arg ={v} {CLOBBER};
  return this_3(D);

  <bb 4>:
  pretmp_21 = MEM[(struct TreeNode *)this_3(D)].last_child;
  arg___ap_lsm.451_28 = arg.__ap;

  <bb 5>:
  # child_process1_8 = PHI <child_process1_10(D)(4), child_process1_15(11)>
  # prephitmp_17 = PHI <pretmp_21(4), child_process1_8(11)>
  # arg___ap_lsm.451_14 = PHI <arg___ap_lsm.451_28(4), _13(11)>
  MEM[(struct tree_node_t *)child_process1_8].parent = _4;
  if (prephitmp_17 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  prephitmp_17->next_sibling = child_process1_8;
  goto <bb 10>;

  <bb 7>:
  _38 = MEM[(struct TreeNode *)this_3(D)].first_child;
  if (_38 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  # arg___ap_lsm.451_2 = PHI <arg___ap_lsm.451_14(7)>
  arg.__ap = arg___ap_lsm.451_2;
  LUNA::Utility::TreeNode<LUNA::CSP::CSPConstruct*>::_ZN4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEE12append_childEPS5_.part.2 ();

  <bb 9>:
  MEM[(struct TreeNode *)this_3(D)].first_child = child_process1_8;

  <bb 10>:
  MEM[(struct tree_node_t *)child_process1_8].prev_sibling = prephitmp_17;
  MEM[(struct TreeNode *)this_3(D)].last_child = child_process1_8;
  MEM[(struct tree_node_t *)child_process1_8].next_sibling = 0B;
  _13 = arg___ap_lsm.451_14 + 4;
  child_process1_15 = MEM[(struct CSPConstruct * *)arg___ap_lsm.451_14];
  if (child_process1_15 != 0B)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 11>:
  goto <bb 5>;

}



;; Function ModelTimer::Producer::Producer::Producer(LUNA::CSP::ChannelIn<int>*, LUNA::CSP::ChannelIn<int>*, LUNA::CSP::ChannelIn<int>*) (_ZN10ModelTimer8Producer8ProducerC2EPN4LUNA3CSP9ChannelInIiEES6_S6_, funcdef_no=4087, decl_uid=80114, symbol_order=1152)

ModelTimer::Producer::Producer::Producer(LUNA::CSP::ChannelIn<int>*, LUNA::CSP::ChannelIn<int>*, LUNA::CSP::ChannelIn<int>*) (struct Producer * const this, struct ChannelIn * osci_port, struct ChannelIn * pro_out_ch2, struct ChannelIn * prod_out_ch1)
{
  struct CSProcess * D.88523;
  struct CSProcess * D.88521;
  struct CSProcess * D.88519;
  struct CSPConstruct * iftmp.0_1;
  struct CSPConstruct * iftmp.1_2;
  struct Sequential * _7;
  void * _13;
  int * _14;
  int * _15;
  int * _16;
  void * _21;
  void * _27;
  void * _33;
  struct Runnable * _37;
  void * _39;
  struct Writer * _40;
  struct CSPConstruct * iftmp.0_41;
  struct Writer * _42;
  struct CSPConstruct * iftmp.1_43;
  struct cpp_producer * _48;
  struct TreeNode * iftmp.2_49;
  struct TreeNode * iftmp.3_52;
  struct Sequential * _54;
  struct Runnable * _69;
  struct TreeNode * _82;
  struct Runnable * _102;
  struct CSPConstruct * _103;
  struct CSPConstruct * _105;
  struct CSPConstruct * _107;
  struct TreeNode * _109;
  struct Writer * _191;

  <bb 2>:
  _7 = &this_6(D)->D.80128;
  LUNA::CSP::Sequential::Sequential (_7, 0B);
  this_6(D)->D.80128.D.74220.D.35429._vptr.TreeNode = &MEM[(void *)&_ZTVN10ModelTimer8Producer8ProducerE + 8B];
  MEM[(const char * *)this_6(D) + 40B] = "Producer";
  _13 = operator new (76);

  <bb 3>:
  _14 = &this_6(D)->oscSignal;
  _15 = &this_6(D)->var1;
  _16 = &this_6(D)->var2;
  ModelTimer::Producer::cpp_producer::cpp_producer::cpp_producer (_13, _14, _15, _16);

  <bb 4>:
  this_6(D)->mycpp_producer = _13;
  MEM[(const char * *)_13 + 48B] = "cpp_producer";
  _21 = operator new (96);
  goto <bb 6>;

<L21>:
  goto <bb 35> (<L19>);

  <bb 6>:
  _102 = &MEM[(struct CSProcess *)_21].D.42484;
  LUNA::Runnable::Runnable (_102);

  <bb 7>:
  _103 = &MEM[(struct CSProcess *)_21].D.42485;
  MEM[(struct TreeNode *)_21 + 8B].parent = 0B;
  MEM[(struct TreeNode *)_21 + 8B].first_child = 0B;
  MEM[(struct TreeNode *)_21 + 8B].last_child = 0B;
  MEM[(struct TreeNode *)_21 + 8B].prev_sibling = 0B;
  MEM[(struct TreeNode *)_21 + 8B].next_sibling = 0B;
  MEM[(struct TreeNode *)_21 + 8B].data = _103;
  MEM[(struct CSPConstruct *)_21 + 8B].m_guard = 0B;
  MEM[(struct CSPConstruct *)_21 + 8B].m_exit = 0;
  MEM[(struct CSPConstruct *)_21 + 8B].m_priority = -1;
  MEM[(const char * *)_21 + 52B] = "CSPConstruct";
  MEM[(struct ListItem *)_21 + 64B].m_next = 0B;
  MEM[(struct Writer *)_21].D.80253.D.46813.D.42484._vptr.Runnable = &MEM[(void *)&_ZTVN4LUNA3CSP6WriterIiEE + 8B];
  MEM[(struct Writer *)_21].D.80253.D.46813.D.42485.D.35429._vptr.TreeNode = &MEM[(void *)&_ZTVN4LUNA3CSP6WriterIiEE + 92B];
  MEM[(struct Writer *)_21].D.80253.D.46814._vptr.ListItem = &MEM[(void *)&_ZTVN4LUNA3CSP6WriterIiEE + 140B];
  MEM[(struct Writer *)_21].m_channel = osci_port_22(D);
  MEM[(struct Writer *)_21].m_variable = _14;
  MEM[(const char * *)_21 + 48B] = "Writer";
  this_6(D)->mysignalWriter = _21;
  MEM[(const char * *)_21 + 48B] = "signalWriter";
  _27 = operator new (96);
  goto <bb 9>;

<L22>:
  goto <bb 35> (<L19>);

  <bb 9>:
  _37 = &MEM[(struct CSProcess *)_27].D.42484;
  LUNA::Runnable::Runnable (_37);

  <bb 10>:
  _105 = &MEM[(struct CSProcess *)_27].D.42485;
  MEM[(struct TreeNode *)_27 + 8B].parent = 0B;
  MEM[(struct TreeNode *)_27 + 8B].first_child = 0B;
  MEM[(struct TreeNode *)_27 + 8B].last_child = 0B;
  MEM[(struct TreeNode *)_27 + 8B].prev_sibling = 0B;
  MEM[(struct TreeNode *)_27 + 8B].next_sibling = 0B;
  MEM[(struct TreeNode *)_27 + 8B].data = _105;
  MEM[(struct CSPConstruct *)_27 + 8B].m_guard = 0B;
  MEM[(struct CSPConstruct *)_27 + 8B].m_exit = 0;
  MEM[(struct CSPConstruct *)_27 + 8B].m_priority = -1;
  MEM[(const char * *)_27 + 52B] = "CSPConstruct";
  MEM[(struct ListItem *)_27 + 64B].m_next = 0B;
  MEM[(struct Writer *)_27].D.80253.D.46813.D.42484._vptr.Runnable = &MEM[(void *)&_ZTVN4LUNA3CSP6WriterIiEE + 8B];
  MEM[(struct Writer *)_27].D.80253.D.46813.D.42485.D.35429._vptr.TreeNode = &MEM[(void *)&_ZTVN4LUNA3CSP6WriterIiEE + 92B];
  MEM[(struct Writer *)_27].D.80253.D.46814._vptr.ListItem = &MEM[(void *)&_ZTVN4LUNA3CSP6WriterIiEE + 140B];
  MEM[(struct Writer *)_27].m_channel = prod_out_ch1_28(D);
  MEM[(struct Writer *)_27].m_variable = _15;
  MEM[(const char * *)_27 + 48B] = "Writer";
  this_6(D)->mywriter_ch1 = _27;
  MEM[(const char * *)_27 + 48B] = "writer_ch1";
  _33 = operator new (96);
  goto <bb 12>;

<L23>:
  goto <bb 35> (<L19>);

  <bb 12>:
  _69 = &MEM[(struct CSProcess *)_33].D.42484;
  LUNA::Runnable::Runnable (_69);

  <bb 13>:
  _107 = &MEM[(struct CSProcess *)_33].D.42485;
  MEM[(struct TreeNode *)_33 + 8B].parent = 0B;
  MEM[(struct TreeNode *)_33 + 8B].first_child = 0B;
  MEM[(struct TreeNode *)_33 + 8B].last_child = 0B;
  MEM[(struct TreeNode *)_33 + 8B].prev_sibling = 0B;
  MEM[(struct TreeNode *)_33 + 8B].next_sibling = 0B;
  MEM[(struct TreeNode *)_33 + 8B].data = _107;
  MEM[(struct CSPConstruct *)_33 + 8B].m_guard = 0B;
  MEM[(struct CSPConstruct *)_33 + 8B].m_exit = 0;
  MEM[(struct CSPConstruct *)_33 + 8B].m_priority = -1;
  MEM[(const char * *)_33 + 52B] = "CSPConstruct";
  MEM[(struct ListItem *)_33 + 64B].m_next = 0B;
  MEM[(struct Writer *)_33].D.80253.D.46813.D.42484._vptr.Runnable = &MEM[(void *)&_ZTVN4LUNA3CSP6WriterIiEE + 8B];
  MEM[(struct Writer *)_33].D.80253.D.46813.D.42485.D.35429._vptr.TreeNode = &MEM[(void *)&_ZTVN4LUNA3CSP6WriterIiEE + 92B];
  MEM[(struct Writer *)_33].D.80253.D.46814._vptr.ListItem = &MEM[(void *)&_ZTVN4LUNA3CSP6WriterIiEE + 140B];
  MEM[(struct Writer *)_33].m_channel = pro_out_ch2_34(D);
  MEM[(struct Writer *)_33].m_variable = _16;
  MEM[(const char * *)_33 + 48B] = "Writer";
  this_6(D)->mywriter_ch2 = _33;
  MEM[(const char * *)_33 + 48B] = "writer_ch2";
  _39 = operator new (64);
  goto <bb 15>;

<L24>:
  goto <bb 35> (<L19>);

  <bb 15>:
  _40 = this_6(D)->mywriter_ch1;
  if (_40 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  iftmp.0_41 = &_40->D.80253.D.46813.D.42485;

  <bb 17>:
  # iftmp.0_1 = PHI <iftmp.0_41(16), 0B(15)>
  _42 = this_6(D)->mywriter_ch2;
  if (_42 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  iftmp.1_43 = &_42->D.80253.D.46813.D.42485;

  <bb 19>:
  # iftmp.1_2 = PHI <iftmp.1_43(18), 0B(17)>
  LUNA::CSP::Sequential::Sequential (_39, iftmp.0_1, iftmp.1_2, 0);
  this_6(D)->mySEQUENTIAL = _39;
  MEM[(const char * *)_39 + 40B] = "SEQUENTIAL";
  _48 = this_6(D)->mycpp_producer;
  if (_48 != 0B)
    goto <bb 20>;
  else
    goto <bb 38>;

  <bb 20>:
  iftmp.2_49 = &_48->D.80077.D.45194.D.42485.D.35429;
  MEM[(struct tree_node_t *)_48 + 8B].parent = _7;
  _82 = MEM[(struct TreeNode *)this_6(D)].last_child;
  if (_82 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _82->next_sibling = iftmp.2_49;
  goto <bb 37>;

  <bb 22>:
  _109 = MEM[(struct TreeNode *)this_6(D)].first_child;
  if (_109 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  LUNA::Utility::TreeNode<LUNA::CSP::CSPConstruct*>::_ZN4LUNA7Utility8TreeNodeIPNS_3CSP12CSPConstructEE12append_childEPS5_.part.2 ();

  <bb 24>:
  MEM[(struct TreeNode *)this_6(D)].first_child = iftmp.2_49;
  goto <bb 37>;

  <bb 25>:
  iftmp.3_52 = &_191->D.80253.D.46813.D.42485.D.35429;
  MEM[(struct tree_node_t *)_191 + 8B].parent = _7;
  MEM[(struct TreeNode *)_48 + 8B].next_sibling = iftmp.3_52;
  MEM[(struct tree_node_t *)_191 + 8B].prev_sibling = iftmp.2_49;
  _54 = this_6(D)->mySEQUENTIAL;
  MEM[(struct tree_node_t *)_54].parent = _7;
  MEM[(struct TreeNode *)_191 + 8B].next_sibling = _54;
  MEM[(struct tree_node_t *)_54].prev_sibling = iftmp.3_52;
  MEM[(struct TreeNode *)this_6(D)].last_child = _54;
  MEM[(struct tree_node_t *)_54].next_sibling = 0B;
  return this_6(D);

<L14>:
  operator delete (_13);
  resx 2

<L25>:
  goto <bb 35> (<L19>);

<L15>:
  operator delete (_21);
  resx 4

<L26>:
  goto <bb 35> (<L19>);

<L16>:
  operator delete (_27);
  resx 6

<L27>:
  goto <bb 35> (<L19>);

<L17>:
  operator delete (_33);
  resx 8

<L28>:
  goto <bb 35> (<L19>);

<L20>:

<L19>:
  MEM[(struct Sequential *)this_6(D)] ={v} {CLOBBER};
  resx 1

  <bb 36>:
  MEM[(struct tree_node_t *)0B].parent ={v} _7;
  __builtin_trap ();

  <bb 37>:
  MEM[(struct tree_node_t *)_48 + 8B].prev_sibling = _82;
  MEM[(struct TreeNode *)this_6(D)].last_child = iftmp.2_49;
  MEM[(struct tree_node_t *)_48 + 8B].next_sibling = 0B;
  _191 = this_6(D)->mysignalWriter;
  if (_191 != 0B)
    goto <bb 25>;
  else
    goto <bb 36>;

  <bb 38>:
  MEM[(struct tree_node_t *)0B].parent ={v} _7;
  __builtin_trap ();

}



;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()>; _KeyOfValue = std::_Select1st<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> >*] (_ZNSt8_Rb_treeIiSt4pairIKiPFPN4LUNA9Threading14IThreadBlockerEvEESt10_Select1stIS8_ESt4lessIiESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E, funcdef_no=4399, decl_uid=43876, symbol_order=1491)

void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = int; _Val = std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()>; _KeyOfValue = std::_Select1st<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> >; _Compare = std::less<int>; _Alloc = std::allocator<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> >*] (struct _Rb_tree * const this, struct _Rb_tree_node * __x)
{
  struct _Rb_tree_node_base * _5;

  <bb 2>:
  if (__x_3(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  return;

  <bb 4>:

  <bb 5>:
  # __x_12 = PHI <__x_3(D)(4), __x_8(6)>
  _5 = MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B];
  std::_Rb_tree<int, std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()>, std::_Select1st<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> >, std::less<int>, std::allocator<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> > >::_M_erase (this_6(D), _5);
  __x_8 = MEM[(struct _Rb_tree_node_base * *)__x_12 + 8B];
  operator delete (__x_12);
  if (__x_8 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 3>;

  <bb 6>:
  goto <bb 5>;

}



;; Function static void LUNA::Utility::SingletonHolder<T>::DestroySingleton() [with T = LUNA::Utility::GenericFactory<LUNA::Threading::IThreadBlocker, int>] (_ZN4LUNA7Utility15SingletonHolderINS0_14GenericFactoryINS_9Threading14IThreadBlockerEiPFPS4_vEEEE16DestroySingletonEv, funcdef_no=4277, decl_uid=42532, symbol_order=1366)

static void LUNA::Utility::SingletonHolder<T>::DestroySingleton() [with T = LUNA::Utility::GenericFactory<LUNA::Threading::IThreadBlocker, int>] ()
{
  bool m_destroyed.59_3;
  struct GenericFactory * m_instance.60_4;
  struct _Rep_type * _10;
  struct _Rb_tree_node_base * _11;

  <bb 2>:
  m_destroyed.59_3 = m_destroyed;
  if (m_destroyed.59_3 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("!m_destroyed", "/home/rtsd/RTSD/LUNA/luna-xenomai-arm-v7-Posix/include/utility/Singleton.h", 152, &__PRETTY_FUNCTION__);

  <bb 4>:
  m_instance.60_4 ={v} m_instance;
  if (m_instance.60_4 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _10 = &MEM[(struct map *)m_instance.60_4]._M_t;
  _11 = MEM[(struct _Rb_tree_node_base * *)m_instance.60_4 + 8B];
  std::_Rb_tree<int, std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()>, std::_Select1st<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> >, std::less<int>, std::allocator<std::pair<const int, LUNA::Threading::IThreadBlocker* (*)()> > >::_M_erase (_10, _11);
  *m_instance.60_4 ={v} {CLOBBER};
  operator delete (m_instance.60_4);

  <bb 6>:
  m_instance ={v} 0B;
  m_destroyed = 1;
  return;

}



;; Function (static initializers for src/Producer.cpp) (_GLOBAL__sub_I__ZN10ModelTimer8Producer8ProducerC2EPN4LUNA3CSP9ChannelInIiEES6_S6_, funcdef_no=4524, decl_uid=85332, symbol_order=2394) (executed once)

(static initializers for src/Producer.cpp) ()
{
  int _ZGVN4LUNA7Utility15SingletonHolderINS0_14GenericFactoryINS_9Threading14IThreadBlockerEiPFPS4_vEEEE6m_lockE.76_3;
  int _4;
  int _ZGVN4LUNA7Utility15SingletonHolderINS_16EmergencyManagerEE6m_lockE.77_5;
  int _6;

  <bb 2>:
  std::ios_base::Init::Init (&__ioinit);
  __aeabi_atexit (&__ioinit, __comp_dtor , &__dso_handle);
  _ZGVN4LUNA7Utility15SingletonHolderINS0_14GenericFactoryINS_9Threading14IThreadBlockerEiPFPS4_vEEEE6m_lockE.76_3 = _ZGVN4LUNA7Utility15SingletonHolderINS0_14GenericFactoryINS_9Threading14IThreadBlockerEiPFPS4_vEEEE6m_lockE;
  _4 = _ZGVN4LUNA7Utility15SingletonHolderINS0_14GenericFactoryINS_9Threading14IThreadBlockerEiPFPS4_vEEEE6m_lockE.76_3 & 1;
  if (_4 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _ZGVN4LUNA7Utility15SingletonHolderINS0_14GenericFactoryINS_9Threading14IThreadBlockerEiPFPS4_vEEEE6m_lockE = 1;
  LUNA::locksync::Mutex::Mutex (&m_lock, 1, 0);
  __aeabi_atexit (&m_lock, __comp_dtor , &__dso_handle);

  <bb 4>:
  _ZGVN4LUNA7Utility15SingletonHolderINS_16EmergencyManagerEE6m_lockE.77_5 = _ZGVN4LUNA7Utility15SingletonHolderINS_16EmergencyManagerEE6m_lockE;
  _6 = _ZGVN4LUNA7Utility15SingletonHolderINS_16EmergencyManagerEE6m_lockE.77_5 & 1;
  if (_6 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _ZGVN4LUNA7Utility15SingletonHolderINS_16EmergencyManagerEE6m_lockE = 1;
  LUNA::locksync::Mutex::Mutex (&m_lock, 1, 0);
  __aeabi_atexit (&m_lock, __comp_dtor , &__dso_handle);

  <bb 6>:
  return;

}



;; Function virtual void LUNA::CSP::CSProcess::preRun() (_ZN4LUNA3CSP9CSProcess6preRunEv, funcdef_no=1975, decl_uid=42445, symbol_order=470)

virtual void LUNA::CSP::CSProcess::preRun() (struct CSProcess * const this)
{
  struct _Rb_tree_node_base * SR.471;
  struct _Rb_tree_node_base * SR.470;
  struct EmergencyManager * D.88603;
  struct IThreadBlocker * D.88590;
  struct iterator D.88586;
  struct _Rb_tree_node * __y;
  struct iterator D.88582;
  struct _Rb_tree_node_base * SR.325;
  struct IThreadBlocker * D.88580;
  struct GenericFactory * D.88577;
  static const char __FUNCTION__[7] = "preRun";
  const int D.44663;
  struct IThread * _10;
  int (*__vtbl_ptr_type) () * _11;
  int (*__vtbl_ptr_type) () _12;
  int _14;
  const char * _20;
  struct IThread * _22;
  int _25;
  struct IThread * _26;
  int (*__vtbl_ptr_type) () * _27;
  int (*__vtbl_ptr_type) () _28;
  int _30;
  int _31;
  struct GenericFactory * m_instance.54_34;
  struct GenericFactory * m_instance.56_35;
  bool m_destroyed.57_36;
  void * _37;
  struct _Rb_tree_node_base * _38;
  struct GenericFactory * _39;
  struct IThreadBlocker * (*<T8397>) (void) _42;
  struct IThreadBlocker * _43;
  const int _48;
  const int _55;
  struct EmergencyManager * m_instance.65_59;
  struct EmergencyManager * m_instance.67_60;
  bool m_destroyed.68_61;
  void * _62;
  struct EmergencyManager * _63;
  int (*__vtbl_ptr_type) () * _64;
  int (*__vtbl_ptr_type) () _65;
  int _66;

  <bb 2>:
  __builtin_puts (&"Setting thread mode for mode switches"[0]);
  pthread_setmode_np (16384, 0, 0B);
  m_instance.54_34 ={v} m_instance;
  if (m_instance.54_34 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 3>:
  LUNA::locksync::Mutex::lock (&m_lock);
  m_instance.56_35 ={v} m_instance;
  if (m_instance.56_35 == 0B)
    goto <bb 4>;
  else
    goto <bb 7>;

  <bb 4>:
  m_destroyed.57_36 = m_destroyed;
  if (m_destroyed.57_36 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  LUNA::log (0, "Singleton object was already destroyed, creating new (note: this might destroy timing requirements!).\n");
  m_destroyed = 0;

  <bb 6>:
  _37 = operator new (24);
  MEM[(struct _Rb_tree_impl *)_37]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)_37]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)_37]._M_node_count = 0;
  _38 = &MEM[(struct _Rb_tree_impl *)_37]._M_header;
  MEM[(struct _Rb_tree_impl *)_37]._M_header._M_left = _38;
  MEM[(struct _Rb_tree_impl *)_37]._M_header._M_right = _38;
  m_instance ={v} _37;
  atexit (DestroySingleton);

  <bb 7>:
  LUNA::locksync::Mutex::unlock (&m_lock);

  <bb 8>:
  _39 ={v} m_instance;
  _10 = this_9(D)->D.42484.m_thread;
  _11 = _10->D.35164._vptr.Uncopyable;
  _12 = MEM[(int (*__vtbl_ptr_type) () *)_11 + 28B];
  _14 = OBJ_TYPE_REF(_12;(struct IThread)_10->7) (_10);
  __y_16 = MEM[(struct _Rb_tree_node_base * *)_39 + 8B];
  __y_46 = &MEM[(struct _Rb_tree *)_39]._M_impl._M_header;
  if (__y_16 != 0B)
    goto <bb 9>;
  else
    goto <bb 18>;

  <bb 9>:

  <bb 10>:
  # __y_108 = PHI <__y_16(9), __y_57(14)>
  # __y_87 = PHI <__y_46(9), __y_56(14)>
  _48 = MEM[(const int &)__y_108 + 16];
  if (_14 <= _48)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  __y_50 = MEM[(struct _Rb_tree_node_base * *)__y_108 + 8B];
  goto <bb 13>;

  <bb 12>:
  __y_51 = MEM[(struct _Rb_tree_node_base * *)__y_108 + 12B];

  <bb 13>:
  # __y_57 = PHI <__y_50(11), __y_51(12)>
  # __y_56 = PHI <__y_108(11), __y_87(12)>
  if (__y_57 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  goto <bb 10>;

  <bb 15>:
  # __y_107 = PHI <__y_56(13)>
  if (__y_46 == __y_107)
    goto <bb 18>;
  else
    goto <bb 16>;

  <bb 16>:
  _55 = MEM[(const int &)__y_107 + 16];
  if (_14 < _55)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  _42 = MEM[(struct pair *)__y_107 + 16B].second;
  _43 = _42 ();
  this_9(D)->m_activate = _43;
  if (_43 == 0B)
    goto <bb 19>;
  else
    goto <bb 28>;

  <bb 18>:
  LUNA::log (5, "GenericFactory::CreateObject - identifier type not known.\n");
  this_9(D)->m_activate = 0B;

  <bb 19>:
  _20 = MEM[(const char * *)this_9(D) + 48B];
  LUNA::log (5, "[%s]::%s - createThreadBlocker failed.\n", _20, &__FUNCTION__);
  m_instance.65_59 ={v} m_instance;
  if (m_instance.65_59 == 0B)
    goto <bb 20>;
  else
    goto <bb 26>;

  <bb 20>:
  LUNA::locksync::Mutex::lock (&m_lock);
  m_instance.67_60 ={v} m_instance;
  if (m_instance.67_60 == 0B)
    goto <bb 21>;
  else
    goto <bb 25>;

  <bb 21>:
  m_destroyed.68_61 = m_destroyed;
  if (m_destroyed.68_61 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  LUNA::log (0, "Singleton object was already destroyed, creating new (note: this might destroy timing requirements!).\n");
  m_destroyed = 0;

  <bb 23>:
  _62 = operator new (72);
  LUNA::EmergencyManager::EmergencyManager (_62);

  <bb 24>:
  m_instance ={v} _62;
  atexit (DestroySingleton);

  <bb 25>:
  LUNA::locksync::Mutex::unlock (&m_lock);

  <bb 26>:
  _63 ={v} m_instance;
  LUNA::EmergencyManager::emergencyShutdown (_63);
  goto <bb 28>;

<L17>:
  operator delete (_62);
  resx 3

  <bb 28>:
  _25 = this_9(D)->D.42485.m_priority;
  if (_25 != -1)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _26 = this_9(D)->D.42484.m_thread;
  _27 = _26->D.35164._vptr.Uncopyable;
  _28 = MEM[(int (*__vtbl_ptr_type) () *)_27 + 12B];
  _30 = OBJ_TYPE_REF(_28;(struct IThread)_26->3) (_26, _25);
  if (_30 != 0)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 30>:
  _22 = this_9(D)->D.42484.m_thread;
  _64 = _22->D.35164._vptr.Uncopyable;
  _65 = MEM[(int (*__vtbl_ptr_type) () *)_64 + 16B];
  _66 = OBJ_TYPE_REF(_65;(struct IThread)_22->4) (_22);
  this_9(D)->D.42485.m_priority = _66;

  <bb 31>:
  return;

  <bb 32>:
  _31 = this_9(D)->D.42485.m_priority;
  if (_31 == -1)
    goto <bb 30>;
  else
    goto <bb 31>;

}



;; Function void LUNA::CSP::Writer<DataType>::preRun() [with DataType = int] (_ZN4LUNA3CSP6WriterIiE6preRunEv, funcdef_no=4512, decl_uid=80189, symbol_order=2379)

void LUNA::CSP::Writer<DataType>::preRun() [with DataType = int] (struct Writer * const this)
{
  struct _Rb_tree_node_base * SR.477;
  struct _Rb_tree_node_base * SR.476;
  struct _Rb_tree_node_base * SR.475;
  struct _Rb_tree_node_base * SR.474;
  struct IThreadBlocker * D.88675;
  struct iterator D.88671;
  struct _Rb_tree_node * __y;
  struct iterator D.88667;
  struct _Rb_tree_node_base * SR.325;
  struct IThreadBlocker * D.88665;
  struct GenericFactory * D.88662;
  struct EmergencyManager * D.88657;
  struct IThreadBlocker * D.88644;
  struct iterator D.88640;
  struct _Rb_tree_node * __y;
  struct iterator D.88636;
  struct _Rb_tree_node_base * SR.325;
  struct IThreadBlocker * D.88634;
  struct GenericFactory * D.88631;
  const int D.88630;
  const int D.85281;
  struct GenericFactory * m_instance.54_4;
  struct IThread * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;
  int _11;
  struct IThread * _18;
  int (*__vtbl_ptr_type) () * _19;
  int (*__vtbl_ptr_type) () _20;
  int _21;
  const char * _23;
  int _25;
  struct IThread * _26;
  int (*__vtbl_ptr_type) () * _27;
  int (*__vtbl_ptr_type) () _28;
  int _29;
  int _31;
  struct GenericFactory * m_instance.56_32;
  bool m_destroyed.57_33;
  void * _34;
  struct _Rb_tree_node_base * _35;
  struct GenericFactory * _36;
  struct IThreadBlocker * (*<T8397>) (void) _40;
  struct IThreadBlocker * _41;
  const int _47;
  const int _54;
  struct EmergencyManager * m_instance.65_58;
  struct EmergencyManager * m_instance.67_59;
  bool m_destroyed.68_60;
  void * _61;
  struct EmergencyManager * _62;
  struct IThread * _63;
  int (*__vtbl_ptr_type) () * _64;
  int (*__vtbl_ptr_type) () _65;
  int _66;
  struct GenericFactory * m_instance.54_67;
  struct GenericFactory * m_instance.56_68;
  bool m_destroyed.57_69;
  void * _70;
  struct _Rb_tree_node_base * _71;
  struct GenericFactory * _72;
  struct IThreadBlocker * (*<T8397>) (void) _75;
  struct IThreadBlocker * _76;
  struct IThreadBlocker * _78;
  const int _81;
  const int _88;

  <bb 2>:
  __builtin_puts (&"Setting thread mode for mode switches"[0]);
  pthread_setmode_np (16384, 0, 0B);
  m_instance.54_4 ={v} m_instance;
  if (m_instance.54_4 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 3>:
  LUNA::locksync::Mutex::lock (&m_lock);
  m_instance.56_32 ={v} m_instance;
  if (m_instance.56_32 == 0B)
    goto <bb 4>;
  else
    goto <bb 7>;

  <bb 4>:
  m_destroyed.57_33 = m_destroyed;
  if (m_destroyed.57_33 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  LUNA::log (0, "Singleton object was already destroyed, creating new (note: this might destroy timing requirements!).\n");
  m_destroyed = 0;

  <bb 6>:
  _34 = operator new (24);
  MEM[(struct _Rb_tree_impl *)_34]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)_34]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)_34]._M_node_count = 0;
  _35 = &MEM[(struct _Rb_tree_impl *)_34]._M_header;
  MEM[(struct _Rb_tree_impl *)_34]._M_header._M_left = _35;
  MEM[(struct _Rb_tree_impl *)_34]._M_header._M_right = _35;
  m_instance ={v} _34;
  atexit (DestroySingleton);

  <bb 7>:
  LUNA::locksync::Mutex::unlock (&m_lock);

  <bb 8>:
  _36 ={v} m_instance;
  _18 = MEM[(struct CSProcess *)this_1(D)].D.42484.m_thread;
  _19 = _18->D.35164._vptr.Uncopyable;
  _20 = MEM[(int (*__vtbl_ptr_type) () *)_19 + 28B];
  _21 = OBJ_TYPE_REF(_20;(struct IThread)_18->7) (_18);
  __y_44 = MEM[(struct _Rb_tree_node_base * *)_36 + 8B];
  __y_45 = &MEM[(struct _Rb_tree *)_36]._M_impl._M_header;
  if (__y_44 != 0B)
    goto <bb 9>;
  else
    goto <bb 18>;

  <bb 9>:

  <bb 10>:
  # __y_130 = PHI <__y_44(9), __y_90(14)>
  # __y_171 = PHI <__y_45(9), __y_89(14)>
  _47 = MEM[(const int &)__y_130 + 16];
  if (_21 <= _47)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  __y_49 = MEM[(struct _Rb_tree_node_base * *)__y_130 + 8B];
  goto <bb 13>;

  <bb 12>:
  __y_50 = MEM[(struct _Rb_tree_node_base * *)__y_130 + 12B];

  <bb 13>:
  # __y_90 = PHI <__y_49(11), __y_50(12)>
  # __y_89 = PHI <__y_130(11), __y_171(12)>
  if (__y_90 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  goto <bb 10>;

  <bb 15>:
  # __y_174 = PHI <__y_89(13)>
  if (__y_45 == __y_174)
    goto <bb 18>;
  else
    goto <bb 16>;

  <bb 16>:
  _54 = MEM[(const int &)__y_174 + 16];
  if (_21 < _54)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:
  _40 = MEM[(struct pair *)__y_174 + 16B].second;
  _41 = _40 ();
  MEM[(struct CSProcess *)this_1(D)].m_activate = _41;
  if (_41 == 0B)
    goto <bb 19>;
  else
    goto <bb 28>;

  <bb 18>:
  LUNA::log (5, "GenericFactory::CreateObject - identifier type not known.\n");
  MEM[(struct CSProcess *)this_1(D)].m_activate = 0B;

  <bb 19>:
  _23 = MEM[(const char * *)this_1(D) + 48B];
  LUNA::log (5, "[%s]::%s - createThreadBlocker failed.\n", _23, &__FUNCTION__);
  m_instance.65_58 ={v} m_instance;
  if (m_instance.65_58 == 0B)
    goto <bb 20>;
  else
    goto <bb 26>;

  <bb 20>:
  LUNA::locksync::Mutex::lock (&m_lock);
  m_instance.67_59 ={v} m_instance;
  if (m_instance.67_59 == 0B)
    goto <bb 21>;
  else
    goto <bb 25>;

  <bb 21>:
  m_destroyed.68_60 = m_destroyed;
  if (m_destroyed.68_60 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  LUNA::log (0, "Singleton object was already destroyed, creating new (note: this might destroy timing requirements!).\n");
  m_destroyed = 0;

  <bb 23>:
  _61 = operator new (72);
  LUNA::EmergencyManager::EmergencyManager (_61);

  <bb 24>:
  m_instance ={v} _61;
  atexit (DestroySingleton);

  <bb 25>:
  LUNA::locksync::Mutex::unlock (&m_lock);

  <bb 26>:
  _62 ={v} m_instance;
  LUNA::EmergencyManager::emergencyShutdown (_62);
  goto <bb 28>;

<L1>:
  operator delete (_61);
  resx 3

  <bb 28>:
  _25 = MEM[(struct CSProcess *)this_1(D)].D.42485.m_priority;
  if (_25 != -1)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _26 = MEM[(struct CSProcess *)this_1(D)].D.42484.m_thread;
  _27 = _26->D.35164._vptr.Uncopyable;
  _28 = MEM[(int (*__vtbl_ptr_type) () *)_27 + 12B];
  _29 = OBJ_TYPE_REF(_28;(struct IThread)_26->3) (_26, _25);
  if (_29 != 0)
    goto <bb 31>;
  else
    goto <bb 49>;

  <bb 30>:
  _63 = MEM[(struct CSProcess *)this_1(D)].D.42484.m_thread;
  _64 = _63->D.35164._vptr.Uncopyable;
  _65 = MEM[(int (*__vtbl_ptr_type) () *)_64 + 16B];
  _66 = OBJ_TYPE_REF(_65;(struct IThread)_63->4) (_63);
  MEM[(struct CSProcess *)this_1(D)].D.42485.m_priority = _66;

  <bb 31>:
  m_instance.54_67 ={v} m_instance;
  if (m_instance.54_67 == 0B)
    goto <bb 32>;
  else
    goto <bb 37>;

  <bb 32>:
  LUNA::locksync::Mutex::lock (&m_lock);
  m_instance.56_68 ={v} m_instance;
  if (m_instance.56_68 == 0B)
    goto <bb 33>;
  else
    goto <bb 36>;

  <bb 33>:
  m_destroyed.57_69 = m_destroyed;
  if (m_destroyed.57_69 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  LUNA::log (0, "Singleton object was already destroyed, creating new (note: this might destroy timing requirements!).\n");
  m_destroyed = 0;

  <bb 35>:
  _70 = operator new (24);
  MEM[(struct _Rb_tree_impl *)_70]._M_header._M_color = 0;
  MEM[(struct _Rb_tree_impl *)_70]._M_header._M_parent = 0B;
  MEM[(struct _Rb_tree_impl *)_70]._M_node_count = 0;
  _71 = &MEM[(struct _Rb_tree_impl *)_70]._M_header;
  MEM[(struct _Rb_tree_impl *)_70]._M_header._M_left = _71;
  MEM[(struct _Rb_tree_impl *)_70]._M_header._M_right = _71;
  m_instance ={v} _70;
  atexit (DestroySingleton);

  <bb 36>:
  LUNA::locksync::Mutex::unlock (&m_lock);

  <bb 37>:
  _72 ={v} m_instance;
  _7 = this_1(D)->D.80253.D.46813.D.42484.m_thread;
  _8 = _7->D.35164._vptr.Uncopyable;
  _9 = MEM[(int (*__vtbl_ptr_type) () *)_8 + 28B];
  _11 = OBJ_TYPE_REF(_9;(struct IThread)_7->7) (_7);
  __y_13 = MEM[(struct _Rb_tree_node_base * *)_72 + 8B];
  __y_79 = &MEM[(struct _Rb_tree *)_72]._M_impl._M_header;
  if (__y_13 != 0B)
    goto <bb 38>;
  else
    goto <bb 47>;

  <bb 38>:

  <bb 39>:
  # __y_94 = PHI <__y_13(38), __y_56(43)>
  # __y_99 = PHI <__y_79(38), __y_55(43)>
  _81 = MEM[(const int &)__y_94 + 16];
  if (_11 <= _81)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  __y_83 = MEM[(struct _Rb_tree_node_base * *)__y_94 + 8B];
  goto <bb 42>;

  <bb 41>:
  __y_84 = MEM[(struct _Rb_tree_node_base * *)__y_94 + 12B];

  <bb 42>:
  # __y_56 = PHI <__y_83(40), __y_84(41)>
  # __y_55 = PHI <__y_94(40), __y_99(41)>
  if (__y_56 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  goto <bb 39>;

  <bb 44>:
  # __y_176 = PHI <__y_55(42)>
  if (__y_79 == __y_176)
    goto <bb 47>;
  else
    goto <bb 45>;

  <bb 45>:
  _88 = MEM[(const int &)__y_176 + 16];
  if (_11 < _88)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:
  _75 = MEM[(struct pair *)__y_176 + 16B].second;
  _76 = _75 ();
  goto <bb 48>;

  <bb 47>:
  LUNA::log (5, "GenericFactory::CreateObject - identifier type not known.\n");

  <bb 48>:
  # _78 = PHI <_76(46), 0B(47)>
  this_1(D)->m_blocker = _78;
  return;

  <bb 49>:
  _31 = MEM[(struct CSProcess *)this_1(D)].D.42485.m_priority;
  if (_31 == -1)
    goto <bb 30>;
  else
    goto <bb 31>;

}


