/**
 * Source file for the EncoderV model
 * Generated by the TERRA CSPm2LUNA generator version 1.1.3
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "EncoderV.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace EncoderV { 

EncoderV::EncoderV(ChannelOut<int> *pt_encoderV_in, ChannelIn<double> *pt_encoderV_out) :
    Sequential(NULL)
{
  SETNAME(this, "EncoderV");

  // Initialize model objects
  mycpp_encoderV = new cpp_encoderV::cpp_encoderV(input, output);
  SETNAME(mycpp_encoderV, "cpp_encoderV");
  myreader_encoderV = new Reader<int>(&input, pt_encoderV_in);
  SETNAME(myreader_encoderV, "reader_encoderV");
  mywriter_encoderV = new Writer<double>(&output, pt_encoderV_out);
  SETNAME(mywriter_encoderV, "writer_encoderV");


  // Register model objects
  this->append_child(myreader_encoderV);
  this->append_child(mycpp_encoderV);
  this->append_child(mywriter_encoderV);

  // protected region constructor on begin

  // protected region constructor end
}

EncoderV::~EncoderV()
{
  // TODO Properly destroy all additional objects that got defined in the constructor

  // protected region destructor on begin

  // protected region destructor end

  // Destroy model objects
  delete mywriter_encoderV;
  delete myreader_encoderV;
  delete mycpp_encoderV;
}



// protected region additional functions on begin

// protected region additional functions end

// Close namespace(s)
} 
