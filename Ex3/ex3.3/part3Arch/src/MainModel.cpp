/**
 * Source file for the MainModel model
 * Generated by the TERRA Arch2LUNA generator version 1.0.1
 *
 * protected region document description on begin
 *
 * protected region document description end
 */

#include "MainModel.h"
// protected region additional headers on begin
// Each additional header should get a corresponding dependency in the Makefile
// protected region additional headers end

namespace MainModel { 

MainModel::MainModel() :
    Recursion<CSProcess>()
{
  SETNAME(this, "MainModel");
  OSScheduler::Instance()->setSchedulerPolicy(FIFO);

  // Initialize channels
  myEncoderHpt_encoderH_out_to_JIWYencoder_h_outChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myEncoderVpt_encoderV_out_to_JIWYencoder_v_outChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myJIWYpwm_horizontal_in_to_PWMpwm_in_horizontalChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myJIWYpwm_vertical_in_to_PWMpwm_in_verticalChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myJoystickjoystick_hor_to_JIWYjoystick_h_inChannel = new UnbufferedChannel<double, One2In, Out2One>();
  myJoystickjoystick_ver_to_JIWYjoystick_v_inChannel = new UnbufferedChannel<double, One2In, Out2One>();

  // Initialize hardware channels
  LUNA::Clock::period_t myJIWYpt_timer_to_timer_ptChannelTimerPeriod;
  myJIWYpt_timer_to_timer_ptChannelTimerPeriod.seconds = 0;
  myJIWYpt_timer_to_timer_ptChannelTimerPeriod.nanoseconds = 1000000;
  myJIWYpt_timer_to_timer_ptChannel = new PeriodicTimerChannel(myJIWYpt_timer_to_timer_ptChannelTimerPeriod, false);

  myPWMpwm_out_horizontal_to_pwm_robot_hChannel = new LUNA::CSP::RaMstix::RaMstixPWMChannel<double>(3, 2, 0, false, 21000, 0);

  myPWMpwm_out_vertical_to_pwm_robot_vChannel = new LUNA::CSP::RaMstix::RaMstixPWMChannel<double>(4, 2, 0, false, 21000, 0);

  mypt_encoder_h_to_EncoderHencoder_ptChannel = new LUNA::CSP::RaMstix::RaMstixEncChannel<int>(3, -1, 1, false, 0);

  mypt_encoder_v_to_EncoderVpt_encoderV_inChannel = new LUNA::CSP::RaMstix::RaMstixEncChannel<int>(4, -1, 1, false, 0);

  // Initialize model objects
  myEncoderH = new EncoderHorizontal::EncoderHorizontal(mypt_encoder_h_to_EncoderHencoder_ptChannel, myEncoderHpt_encoderH_out_to_JIWYencoder_h_outChannel);
  SETNAME(myEncoderH, "EncoderH");
  myEncoderV = new EncoderV::EncoderV(mypt_encoder_v_to_EncoderVpt_encoderV_inChannel, myEncoderVpt_encoderV_out_to_JIWYencoder_v_outChannel);
  SETNAME(myEncoderV, "EncoderV");
  myJIWY = new JIWY::JIWY(myEncoderHpt_encoderH_out_to_JIWYencoder_h_outChannel, myEncoderVpt_encoderV_out_to_JIWYencoder_v_outChannel, myJoystickjoystick_hor_to_JIWYjoystick_h_inChannel, myJoystickjoystick_ver_to_JIWYjoystick_v_inChannel, myJIWYpt_timer_to_timer_ptChannel, myJIWYpwm_horizontal_in_to_PWMpwm_in_horizontalChannel, myJIWYpwm_vertical_in_to_PWMpwm_in_verticalChannel);
  SETNAME(myJIWY, "JIWY");
  myJoystick = new joystick::joystick(myJoystickjoystick_hor_to_JIWYjoystick_h_inChannel, myJoystickjoystick_ver_to_JIWYjoystick_v_inChannel);
  SETNAME(myJoystick, "Joystick");
  myPWM = new PWM::PWM(myJIWYpwm_horizontal_in_to_PWMpwm_in_horizontalChannel, myJIWYpwm_vertical_in_to_PWMpwm_in_verticalChannel, myPWMpwm_out_horizontal_to_pwm_robot_hChannel, myPWMpwm_out_vertical_to_pwm_robot_vChannel);
  SETNAME(myPWM, "PWM");

  // Create Parallel group containing all architecture components
  parallelGroup = new Parallel(
    (CSPConstruct *) myEncoderH,
    (CSPConstruct *) myEncoderV,
    (CSPConstruct *) myJIWY,
    (CSPConstruct *) myJoystick,
    (CSPConstruct *) myPWM,
    NULL
  );
  SETNAME(parallelGroup, "parallelGroup");

  // Register group as top-level recursive object
  setToActivate(parallelGroup);
  setEvaluateCondition(true);
}

MainModel::~MainModel()
{
  // TODO Properly destroy all additional objects that got defined in the constructor

  // Destroy model objects
  delete myPWM;
  delete myJoystick;
  delete myJIWY;
  delete myEncoderV;
  delete myEncoderH;

  // Destroy channels
  delete myEncoderHpt_encoderH_out_to_JIWYencoder_h_outChannel;
  delete myEncoderVpt_encoderV_out_to_JIWYencoder_v_outChannel;
  delete myJIWYpt_timer_to_timer_ptChannel;
  delete myJIWYpwm_horizontal_in_to_PWMpwm_in_horizontalChannel;
  delete myJIWYpwm_vertical_in_to_PWMpwm_in_verticalChannel;
  delete myJoystickjoystick_hor_to_JIWYjoystick_h_inChannel;
  delete myJoystickjoystick_ver_to_JIWYjoystick_v_inChannel;
  delete myPWMpwm_out_horizontal_to_pwm_robot_hChannel;
  delete myPWMpwm_out_vertical_to_pwm_robot_vChannel;
  delete mypt_encoder_h_to_EncoderHencoder_ptChannel;
  delete mypt_encoder_v_to_EncoderVpt_encoderV_inChannel;
}

// Close namespace(s)
} 
